// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="idwt,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.078600,HLS_SYN_LAT=1115012,HLS_SYN_TPT=none,HLS_SYN_MEM=522,HLS_SYN_DSP=14,HLS_SYN_FF=6449,HLS_SYN_LUT=6598}" *)

module idwt (
        ap_clk,
        ap_rst_n,
        m_axi_IMAGE_IN0_AWVALID,
        m_axi_IMAGE_IN0_AWREADY,
        m_axi_IMAGE_IN0_AWADDR,
        m_axi_IMAGE_IN0_AWID,
        m_axi_IMAGE_IN0_AWLEN,
        m_axi_IMAGE_IN0_AWSIZE,
        m_axi_IMAGE_IN0_AWBURST,
        m_axi_IMAGE_IN0_AWLOCK,
        m_axi_IMAGE_IN0_AWCACHE,
        m_axi_IMAGE_IN0_AWPROT,
        m_axi_IMAGE_IN0_AWQOS,
        m_axi_IMAGE_IN0_AWREGION,
        m_axi_IMAGE_IN0_AWUSER,
        m_axi_IMAGE_IN0_WVALID,
        m_axi_IMAGE_IN0_WREADY,
        m_axi_IMAGE_IN0_WDATA,
        m_axi_IMAGE_IN0_WSTRB,
        m_axi_IMAGE_IN0_WLAST,
        m_axi_IMAGE_IN0_WID,
        m_axi_IMAGE_IN0_WUSER,
        m_axi_IMAGE_IN0_ARVALID,
        m_axi_IMAGE_IN0_ARREADY,
        m_axi_IMAGE_IN0_ARADDR,
        m_axi_IMAGE_IN0_ARID,
        m_axi_IMAGE_IN0_ARLEN,
        m_axi_IMAGE_IN0_ARSIZE,
        m_axi_IMAGE_IN0_ARBURST,
        m_axi_IMAGE_IN0_ARLOCK,
        m_axi_IMAGE_IN0_ARCACHE,
        m_axi_IMAGE_IN0_ARPROT,
        m_axi_IMAGE_IN0_ARQOS,
        m_axi_IMAGE_IN0_ARREGION,
        m_axi_IMAGE_IN0_ARUSER,
        m_axi_IMAGE_IN0_RVALID,
        m_axi_IMAGE_IN0_RREADY,
        m_axi_IMAGE_IN0_RDATA,
        m_axi_IMAGE_IN0_RLAST,
        m_axi_IMAGE_IN0_RID,
        m_axi_IMAGE_IN0_RUSER,
        m_axi_IMAGE_IN0_RRESP,
        m_axi_IMAGE_IN0_BVALID,
        m_axi_IMAGE_IN0_BREADY,
        m_axi_IMAGE_IN0_BRESP,
        m_axi_IMAGE_IN0_BID,
        m_axi_IMAGE_IN0_BUSER,
        m_axi_IMAGE_IN1_AWVALID,
        m_axi_IMAGE_IN1_AWREADY,
        m_axi_IMAGE_IN1_AWADDR,
        m_axi_IMAGE_IN1_AWID,
        m_axi_IMAGE_IN1_AWLEN,
        m_axi_IMAGE_IN1_AWSIZE,
        m_axi_IMAGE_IN1_AWBURST,
        m_axi_IMAGE_IN1_AWLOCK,
        m_axi_IMAGE_IN1_AWCACHE,
        m_axi_IMAGE_IN1_AWPROT,
        m_axi_IMAGE_IN1_AWQOS,
        m_axi_IMAGE_IN1_AWREGION,
        m_axi_IMAGE_IN1_AWUSER,
        m_axi_IMAGE_IN1_WVALID,
        m_axi_IMAGE_IN1_WREADY,
        m_axi_IMAGE_IN1_WDATA,
        m_axi_IMAGE_IN1_WSTRB,
        m_axi_IMAGE_IN1_WLAST,
        m_axi_IMAGE_IN1_WID,
        m_axi_IMAGE_IN1_WUSER,
        m_axi_IMAGE_IN1_ARVALID,
        m_axi_IMAGE_IN1_ARREADY,
        m_axi_IMAGE_IN1_ARADDR,
        m_axi_IMAGE_IN1_ARID,
        m_axi_IMAGE_IN1_ARLEN,
        m_axi_IMAGE_IN1_ARSIZE,
        m_axi_IMAGE_IN1_ARBURST,
        m_axi_IMAGE_IN1_ARLOCK,
        m_axi_IMAGE_IN1_ARCACHE,
        m_axi_IMAGE_IN1_ARPROT,
        m_axi_IMAGE_IN1_ARQOS,
        m_axi_IMAGE_IN1_ARREGION,
        m_axi_IMAGE_IN1_ARUSER,
        m_axi_IMAGE_IN1_RVALID,
        m_axi_IMAGE_IN1_RREADY,
        m_axi_IMAGE_IN1_RDATA,
        m_axi_IMAGE_IN1_RLAST,
        m_axi_IMAGE_IN1_RID,
        m_axi_IMAGE_IN1_RUSER,
        m_axi_IMAGE_IN1_RRESP,
        m_axi_IMAGE_IN1_BVALID,
        m_axi_IMAGE_IN1_BREADY,
        m_axi_IMAGE_IN1_BRESP,
        m_axi_IMAGE_IN1_BID,
        m_axi_IMAGE_IN1_BUSER,
        m_axi_IMAGE_IN2_AWVALID,
        m_axi_IMAGE_IN2_AWREADY,
        m_axi_IMAGE_IN2_AWADDR,
        m_axi_IMAGE_IN2_AWID,
        m_axi_IMAGE_IN2_AWLEN,
        m_axi_IMAGE_IN2_AWSIZE,
        m_axi_IMAGE_IN2_AWBURST,
        m_axi_IMAGE_IN2_AWLOCK,
        m_axi_IMAGE_IN2_AWCACHE,
        m_axi_IMAGE_IN2_AWPROT,
        m_axi_IMAGE_IN2_AWQOS,
        m_axi_IMAGE_IN2_AWREGION,
        m_axi_IMAGE_IN2_AWUSER,
        m_axi_IMAGE_IN2_WVALID,
        m_axi_IMAGE_IN2_WREADY,
        m_axi_IMAGE_IN2_WDATA,
        m_axi_IMAGE_IN2_WSTRB,
        m_axi_IMAGE_IN2_WLAST,
        m_axi_IMAGE_IN2_WID,
        m_axi_IMAGE_IN2_WUSER,
        m_axi_IMAGE_IN2_ARVALID,
        m_axi_IMAGE_IN2_ARREADY,
        m_axi_IMAGE_IN2_ARADDR,
        m_axi_IMAGE_IN2_ARID,
        m_axi_IMAGE_IN2_ARLEN,
        m_axi_IMAGE_IN2_ARSIZE,
        m_axi_IMAGE_IN2_ARBURST,
        m_axi_IMAGE_IN2_ARLOCK,
        m_axi_IMAGE_IN2_ARCACHE,
        m_axi_IMAGE_IN2_ARPROT,
        m_axi_IMAGE_IN2_ARQOS,
        m_axi_IMAGE_IN2_ARREGION,
        m_axi_IMAGE_IN2_ARUSER,
        m_axi_IMAGE_IN2_RVALID,
        m_axi_IMAGE_IN2_RREADY,
        m_axi_IMAGE_IN2_RDATA,
        m_axi_IMAGE_IN2_RLAST,
        m_axi_IMAGE_IN2_RID,
        m_axi_IMAGE_IN2_RUSER,
        m_axi_IMAGE_IN2_RRESP,
        m_axi_IMAGE_IN2_BVALID,
        m_axi_IMAGE_IN2_BREADY,
        m_axi_IMAGE_IN2_BRESP,
        m_axi_IMAGE_IN2_BID,
        m_axi_IMAGE_IN2_BUSER,
        m_axi_IMAGE_IN3_AWVALID,
        m_axi_IMAGE_IN3_AWREADY,
        m_axi_IMAGE_IN3_AWADDR,
        m_axi_IMAGE_IN3_AWID,
        m_axi_IMAGE_IN3_AWLEN,
        m_axi_IMAGE_IN3_AWSIZE,
        m_axi_IMAGE_IN3_AWBURST,
        m_axi_IMAGE_IN3_AWLOCK,
        m_axi_IMAGE_IN3_AWCACHE,
        m_axi_IMAGE_IN3_AWPROT,
        m_axi_IMAGE_IN3_AWQOS,
        m_axi_IMAGE_IN3_AWREGION,
        m_axi_IMAGE_IN3_AWUSER,
        m_axi_IMAGE_IN3_WVALID,
        m_axi_IMAGE_IN3_WREADY,
        m_axi_IMAGE_IN3_WDATA,
        m_axi_IMAGE_IN3_WSTRB,
        m_axi_IMAGE_IN3_WLAST,
        m_axi_IMAGE_IN3_WID,
        m_axi_IMAGE_IN3_WUSER,
        m_axi_IMAGE_IN3_ARVALID,
        m_axi_IMAGE_IN3_ARREADY,
        m_axi_IMAGE_IN3_ARADDR,
        m_axi_IMAGE_IN3_ARID,
        m_axi_IMAGE_IN3_ARLEN,
        m_axi_IMAGE_IN3_ARSIZE,
        m_axi_IMAGE_IN3_ARBURST,
        m_axi_IMAGE_IN3_ARLOCK,
        m_axi_IMAGE_IN3_ARCACHE,
        m_axi_IMAGE_IN3_ARPROT,
        m_axi_IMAGE_IN3_ARQOS,
        m_axi_IMAGE_IN3_ARREGION,
        m_axi_IMAGE_IN3_ARUSER,
        m_axi_IMAGE_IN3_RVALID,
        m_axi_IMAGE_IN3_RREADY,
        m_axi_IMAGE_IN3_RDATA,
        m_axi_IMAGE_IN3_RLAST,
        m_axi_IMAGE_IN3_RID,
        m_axi_IMAGE_IN3_RUSER,
        m_axi_IMAGE_IN3_RRESP,
        m_axi_IMAGE_IN3_BVALID,
        m_axi_IMAGE_IN3_BREADY,
        m_axi_IMAGE_IN3_BRESP,
        m_axi_IMAGE_IN3_BID,
        m_axi_IMAGE_IN3_BUSER,
        m_axi_IMAGE_OUT_AWVALID,
        m_axi_IMAGE_OUT_AWREADY,
        m_axi_IMAGE_OUT_AWADDR,
        m_axi_IMAGE_OUT_AWID,
        m_axi_IMAGE_OUT_AWLEN,
        m_axi_IMAGE_OUT_AWSIZE,
        m_axi_IMAGE_OUT_AWBURST,
        m_axi_IMAGE_OUT_AWLOCK,
        m_axi_IMAGE_OUT_AWCACHE,
        m_axi_IMAGE_OUT_AWPROT,
        m_axi_IMAGE_OUT_AWQOS,
        m_axi_IMAGE_OUT_AWREGION,
        m_axi_IMAGE_OUT_AWUSER,
        m_axi_IMAGE_OUT_WVALID,
        m_axi_IMAGE_OUT_WREADY,
        m_axi_IMAGE_OUT_WDATA,
        m_axi_IMAGE_OUT_WSTRB,
        m_axi_IMAGE_OUT_WLAST,
        m_axi_IMAGE_OUT_WID,
        m_axi_IMAGE_OUT_WUSER,
        m_axi_IMAGE_OUT_ARVALID,
        m_axi_IMAGE_OUT_ARREADY,
        m_axi_IMAGE_OUT_ARADDR,
        m_axi_IMAGE_OUT_ARID,
        m_axi_IMAGE_OUT_ARLEN,
        m_axi_IMAGE_OUT_ARSIZE,
        m_axi_IMAGE_OUT_ARBURST,
        m_axi_IMAGE_OUT_ARLOCK,
        m_axi_IMAGE_OUT_ARCACHE,
        m_axi_IMAGE_OUT_ARPROT,
        m_axi_IMAGE_OUT_ARQOS,
        m_axi_IMAGE_OUT_ARREGION,
        m_axi_IMAGE_OUT_ARUSER,
        m_axi_IMAGE_OUT_RVALID,
        m_axi_IMAGE_OUT_RREADY,
        m_axi_IMAGE_OUT_RDATA,
        m_axi_IMAGE_OUT_RLAST,
        m_axi_IMAGE_OUT_RID,
        m_axi_IMAGE_OUT_RUSER,
        m_axi_IMAGE_OUT_RRESP,
        m_axi_IMAGE_OUT_BVALID,
        m_axi_IMAGE_OUT_BREADY,
        m_axi_IMAGE_OUT_BRESP,
        m_axi_IMAGE_OUT_BID,
        m_axi_IMAGE_OUT_BUSER,
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 31'b1;
parameter    ap_ST_fsm_state2 = 31'b10;
parameter    ap_ST_fsm_state3 = 31'b100;
parameter    ap_ST_fsm_state4 = 31'b1000;
parameter    ap_ST_fsm_state5 = 31'b10000;
parameter    ap_ST_fsm_state6 = 31'b100000;
parameter    ap_ST_fsm_state7 = 31'b1000000;
parameter    ap_ST_fsm_state8 = 31'b10000000;
parameter    ap_ST_fsm_state9 = 31'b100000000;
parameter    ap_ST_fsm_pp0_stage0 = 31'b1000000000;
parameter    ap_ST_fsm_state13 = 31'b10000000000;
parameter    ap_ST_fsm_pp1_stage0 = 31'b100000000000;
parameter    ap_ST_fsm_state17 = 31'b1000000000000;
parameter    ap_ST_fsm_pp2_stage0 = 31'b10000000000000;
parameter    ap_ST_fsm_state21 = 31'b100000000000000;
parameter    ap_ST_fsm_pp3_stage0 = 31'b1000000000000000;
parameter    ap_ST_fsm_state25 = 31'b10000000000000000;
parameter    ap_ST_fsm_pp4_stage0 = 31'b100000000000000000;
parameter    ap_ST_fsm_pp4_stage1 = 31'b1000000000000000000;
parameter    ap_ST_fsm_pp4_stage2 = 31'b10000000000000000000;
parameter    ap_ST_fsm_pp4_stage3 = 31'b100000000000000000000;
parameter    ap_ST_fsm_pp4_stage4 = 31'b1000000000000000000000;
parameter    ap_ST_fsm_pp4_stage5 = 31'b10000000000000000000000;
parameter    ap_ST_fsm_pp4_stage6 = 31'b100000000000000000000000;
parameter    ap_ST_fsm_pp4_stage7 = 31'b1000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage8 = 31'b10000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage9 = 31'b100000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage10 = 31'b1000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage11 = 31'b10000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage12 = 31'b100000000000000000000000000000;
parameter    ap_ST_fsm_state98 = 31'b1000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_IMAGE_IN0_ID_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN0_ADDR_WIDTH = 32;
parameter    C_M_AXI_IMAGE_IN0_DATA_WIDTH = 32;
parameter    C_M_AXI_IMAGE_IN0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN0_WUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN0_RUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN0_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_IMAGE_IN0_USER_VALUE = 0;
parameter    C_M_AXI_IMAGE_IN0_PROT_VALUE = 0;
parameter    C_M_AXI_IMAGE_IN0_CACHE_VALUE = 3;
parameter    C_M_AXI_IMAGE_IN1_ID_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN1_ADDR_WIDTH = 32;
parameter    C_M_AXI_IMAGE_IN1_DATA_WIDTH = 32;
parameter    C_M_AXI_IMAGE_IN1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN1_WUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN1_RUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN1_BUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN1_USER_VALUE = 0;
parameter    C_M_AXI_IMAGE_IN1_PROT_VALUE = 0;
parameter    C_M_AXI_IMAGE_IN1_CACHE_VALUE = 3;
parameter    C_M_AXI_IMAGE_IN2_ID_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN2_ADDR_WIDTH = 32;
parameter    C_M_AXI_IMAGE_IN2_DATA_WIDTH = 32;
parameter    C_M_AXI_IMAGE_IN2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN2_WUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN2_RUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN2_BUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN2_USER_VALUE = 0;
parameter    C_M_AXI_IMAGE_IN2_PROT_VALUE = 0;
parameter    C_M_AXI_IMAGE_IN2_CACHE_VALUE = 3;
parameter    C_M_AXI_IMAGE_IN3_ID_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN3_ADDR_WIDTH = 32;
parameter    C_M_AXI_IMAGE_IN3_DATA_WIDTH = 32;
parameter    C_M_AXI_IMAGE_IN3_AWUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN3_ARUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN3_WUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN3_RUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN3_BUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN3_USER_VALUE = 0;
parameter    C_M_AXI_IMAGE_IN3_PROT_VALUE = 0;
parameter    C_M_AXI_IMAGE_IN3_CACHE_VALUE = 3;
parameter    C_M_AXI_IMAGE_OUT_ID_WIDTH = 1;
parameter    C_M_AXI_IMAGE_OUT_ADDR_WIDTH = 32;
parameter    C_M_AXI_IMAGE_OUT_DATA_WIDTH = 32;
parameter    C_M_AXI_IMAGE_OUT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_OUT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_OUT_WUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_OUT_RUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_OUT_BUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_OUT_USER_VALUE = 0;
parameter    C_M_AXI_IMAGE_OUT_PROT_VALUE = 0;
parameter    C_M_AXI_IMAGE_OUT_CACHE_VALUE = 3;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv17_0 = 17'b00000000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv32_10000 = 32'b10000000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv64_4000000000000000 = 64'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_3FE0000000000000 = 64'b11111111100000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv7_40 = 7'b1000000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv11_400 = 11'b10000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv17_10000 = 17'b10000000000000000;
parameter    ap_const_lv17_1 = 17'b1;
parameter    ap_const_lv8_2 = 8'b10;
parameter    ap_const_lv18_800 = 18'b100000000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv12_2 = 12'b10;
parameter    ap_const_lv18_1 = 18'b1;
parameter    ap_const_lv19_1 = 19'b1;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_1E = 32'b11110;

parameter C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (C_S_AXI_CONTROL_BUS_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_IMAGE_IN0_WSTRB_WIDTH = (C_M_AXI_IMAGE_IN0_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_WSTRB_WIDTH = (C_M_AXI_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_IMAGE_IN1_WSTRB_WIDTH = (C_M_AXI_IMAGE_IN1_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_IMAGE_IN2_WSTRB_WIDTH = (C_M_AXI_IMAGE_IN2_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_IMAGE_IN3_WSTRB_WIDTH = (C_M_AXI_IMAGE_IN3_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_IMAGE_OUT_WSTRB_WIDTH = (C_M_AXI_IMAGE_OUT_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_IMAGE_IN0_AWVALID;
input   m_axi_IMAGE_IN0_AWREADY;
output  [C_M_AXI_IMAGE_IN0_ADDR_WIDTH - 1 : 0] m_axi_IMAGE_IN0_AWADDR;
output  [C_M_AXI_IMAGE_IN0_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN0_AWID;
output  [7:0] m_axi_IMAGE_IN0_AWLEN;
output  [2:0] m_axi_IMAGE_IN0_AWSIZE;
output  [1:0] m_axi_IMAGE_IN0_AWBURST;
output  [1:0] m_axi_IMAGE_IN0_AWLOCK;
output  [3:0] m_axi_IMAGE_IN0_AWCACHE;
output  [2:0] m_axi_IMAGE_IN0_AWPROT;
output  [3:0] m_axi_IMAGE_IN0_AWQOS;
output  [3:0] m_axi_IMAGE_IN0_AWREGION;
output  [C_M_AXI_IMAGE_IN0_AWUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN0_AWUSER;
output   m_axi_IMAGE_IN0_WVALID;
input   m_axi_IMAGE_IN0_WREADY;
output  [C_M_AXI_IMAGE_IN0_DATA_WIDTH - 1 : 0] m_axi_IMAGE_IN0_WDATA;
output  [C_M_AXI_IMAGE_IN0_WSTRB_WIDTH - 1 : 0] m_axi_IMAGE_IN0_WSTRB;
output   m_axi_IMAGE_IN0_WLAST;
output  [C_M_AXI_IMAGE_IN0_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN0_WID;
output  [C_M_AXI_IMAGE_IN0_WUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN0_WUSER;
output   m_axi_IMAGE_IN0_ARVALID;
input   m_axi_IMAGE_IN0_ARREADY;
output  [C_M_AXI_IMAGE_IN0_ADDR_WIDTH - 1 : 0] m_axi_IMAGE_IN0_ARADDR;
output  [C_M_AXI_IMAGE_IN0_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN0_ARID;
output  [7:0] m_axi_IMAGE_IN0_ARLEN;
output  [2:0] m_axi_IMAGE_IN0_ARSIZE;
output  [1:0] m_axi_IMAGE_IN0_ARBURST;
output  [1:0] m_axi_IMAGE_IN0_ARLOCK;
output  [3:0] m_axi_IMAGE_IN0_ARCACHE;
output  [2:0] m_axi_IMAGE_IN0_ARPROT;
output  [3:0] m_axi_IMAGE_IN0_ARQOS;
output  [3:0] m_axi_IMAGE_IN0_ARREGION;
output  [C_M_AXI_IMAGE_IN0_ARUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN0_ARUSER;
input   m_axi_IMAGE_IN0_RVALID;
output   m_axi_IMAGE_IN0_RREADY;
input  [C_M_AXI_IMAGE_IN0_DATA_WIDTH - 1 : 0] m_axi_IMAGE_IN0_RDATA;
input   m_axi_IMAGE_IN0_RLAST;
input  [C_M_AXI_IMAGE_IN0_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN0_RID;
input  [C_M_AXI_IMAGE_IN0_RUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN0_RUSER;
input  [1:0] m_axi_IMAGE_IN0_RRESP;
input   m_axi_IMAGE_IN0_BVALID;
output   m_axi_IMAGE_IN0_BREADY;
input  [1:0] m_axi_IMAGE_IN0_BRESP;
input  [C_M_AXI_IMAGE_IN0_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN0_BID;
input  [C_M_AXI_IMAGE_IN0_BUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN0_BUSER;
output   m_axi_IMAGE_IN1_AWVALID;
input   m_axi_IMAGE_IN1_AWREADY;
output  [C_M_AXI_IMAGE_IN1_ADDR_WIDTH - 1 : 0] m_axi_IMAGE_IN1_AWADDR;
output  [C_M_AXI_IMAGE_IN1_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN1_AWID;
output  [7:0] m_axi_IMAGE_IN1_AWLEN;
output  [2:0] m_axi_IMAGE_IN1_AWSIZE;
output  [1:0] m_axi_IMAGE_IN1_AWBURST;
output  [1:0] m_axi_IMAGE_IN1_AWLOCK;
output  [3:0] m_axi_IMAGE_IN1_AWCACHE;
output  [2:0] m_axi_IMAGE_IN1_AWPROT;
output  [3:0] m_axi_IMAGE_IN1_AWQOS;
output  [3:0] m_axi_IMAGE_IN1_AWREGION;
output  [C_M_AXI_IMAGE_IN1_AWUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN1_AWUSER;
output   m_axi_IMAGE_IN1_WVALID;
input   m_axi_IMAGE_IN1_WREADY;
output  [C_M_AXI_IMAGE_IN1_DATA_WIDTH - 1 : 0] m_axi_IMAGE_IN1_WDATA;
output  [C_M_AXI_IMAGE_IN1_WSTRB_WIDTH - 1 : 0] m_axi_IMAGE_IN1_WSTRB;
output   m_axi_IMAGE_IN1_WLAST;
output  [C_M_AXI_IMAGE_IN1_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN1_WID;
output  [C_M_AXI_IMAGE_IN1_WUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN1_WUSER;
output   m_axi_IMAGE_IN1_ARVALID;
input   m_axi_IMAGE_IN1_ARREADY;
output  [C_M_AXI_IMAGE_IN1_ADDR_WIDTH - 1 : 0] m_axi_IMAGE_IN1_ARADDR;
output  [C_M_AXI_IMAGE_IN1_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN1_ARID;
output  [7:0] m_axi_IMAGE_IN1_ARLEN;
output  [2:0] m_axi_IMAGE_IN1_ARSIZE;
output  [1:0] m_axi_IMAGE_IN1_ARBURST;
output  [1:0] m_axi_IMAGE_IN1_ARLOCK;
output  [3:0] m_axi_IMAGE_IN1_ARCACHE;
output  [2:0] m_axi_IMAGE_IN1_ARPROT;
output  [3:0] m_axi_IMAGE_IN1_ARQOS;
output  [3:0] m_axi_IMAGE_IN1_ARREGION;
output  [C_M_AXI_IMAGE_IN1_ARUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN1_ARUSER;
input   m_axi_IMAGE_IN1_RVALID;
output   m_axi_IMAGE_IN1_RREADY;
input  [C_M_AXI_IMAGE_IN1_DATA_WIDTH - 1 : 0] m_axi_IMAGE_IN1_RDATA;
input   m_axi_IMAGE_IN1_RLAST;
input  [C_M_AXI_IMAGE_IN1_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN1_RID;
input  [C_M_AXI_IMAGE_IN1_RUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN1_RUSER;
input  [1:0] m_axi_IMAGE_IN1_RRESP;
input   m_axi_IMAGE_IN1_BVALID;
output   m_axi_IMAGE_IN1_BREADY;
input  [1:0] m_axi_IMAGE_IN1_BRESP;
input  [C_M_AXI_IMAGE_IN1_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN1_BID;
input  [C_M_AXI_IMAGE_IN1_BUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN1_BUSER;
output   m_axi_IMAGE_IN2_AWVALID;
input   m_axi_IMAGE_IN2_AWREADY;
output  [C_M_AXI_IMAGE_IN2_ADDR_WIDTH - 1 : 0] m_axi_IMAGE_IN2_AWADDR;
output  [C_M_AXI_IMAGE_IN2_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN2_AWID;
output  [7:0] m_axi_IMAGE_IN2_AWLEN;
output  [2:0] m_axi_IMAGE_IN2_AWSIZE;
output  [1:0] m_axi_IMAGE_IN2_AWBURST;
output  [1:0] m_axi_IMAGE_IN2_AWLOCK;
output  [3:0] m_axi_IMAGE_IN2_AWCACHE;
output  [2:0] m_axi_IMAGE_IN2_AWPROT;
output  [3:0] m_axi_IMAGE_IN2_AWQOS;
output  [3:0] m_axi_IMAGE_IN2_AWREGION;
output  [C_M_AXI_IMAGE_IN2_AWUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN2_AWUSER;
output   m_axi_IMAGE_IN2_WVALID;
input   m_axi_IMAGE_IN2_WREADY;
output  [C_M_AXI_IMAGE_IN2_DATA_WIDTH - 1 : 0] m_axi_IMAGE_IN2_WDATA;
output  [C_M_AXI_IMAGE_IN2_WSTRB_WIDTH - 1 : 0] m_axi_IMAGE_IN2_WSTRB;
output   m_axi_IMAGE_IN2_WLAST;
output  [C_M_AXI_IMAGE_IN2_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN2_WID;
output  [C_M_AXI_IMAGE_IN2_WUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN2_WUSER;
output   m_axi_IMAGE_IN2_ARVALID;
input   m_axi_IMAGE_IN2_ARREADY;
output  [C_M_AXI_IMAGE_IN2_ADDR_WIDTH - 1 : 0] m_axi_IMAGE_IN2_ARADDR;
output  [C_M_AXI_IMAGE_IN2_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN2_ARID;
output  [7:0] m_axi_IMAGE_IN2_ARLEN;
output  [2:0] m_axi_IMAGE_IN2_ARSIZE;
output  [1:0] m_axi_IMAGE_IN2_ARBURST;
output  [1:0] m_axi_IMAGE_IN2_ARLOCK;
output  [3:0] m_axi_IMAGE_IN2_ARCACHE;
output  [2:0] m_axi_IMAGE_IN2_ARPROT;
output  [3:0] m_axi_IMAGE_IN2_ARQOS;
output  [3:0] m_axi_IMAGE_IN2_ARREGION;
output  [C_M_AXI_IMAGE_IN2_ARUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN2_ARUSER;
input   m_axi_IMAGE_IN2_RVALID;
output   m_axi_IMAGE_IN2_RREADY;
input  [C_M_AXI_IMAGE_IN2_DATA_WIDTH - 1 : 0] m_axi_IMAGE_IN2_RDATA;
input   m_axi_IMAGE_IN2_RLAST;
input  [C_M_AXI_IMAGE_IN2_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN2_RID;
input  [C_M_AXI_IMAGE_IN2_RUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN2_RUSER;
input  [1:0] m_axi_IMAGE_IN2_RRESP;
input   m_axi_IMAGE_IN2_BVALID;
output   m_axi_IMAGE_IN2_BREADY;
input  [1:0] m_axi_IMAGE_IN2_BRESP;
input  [C_M_AXI_IMAGE_IN2_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN2_BID;
input  [C_M_AXI_IMAGE_IN2_BUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN2_BUSER;
output   m_axi_IMAGE_IN3_AWVALID;
input   m_axi_IMAGE_IN3_AWREADY;
output  [C_M_AXI_IMAGE_IN3_ADDR_WIDTH - 1 : 0] m_axi_IMAGE_IN3_AWADDR;
output  [C_M_AXI_IMAGE_IN3_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN3_AWID;
output  [7:0] m_axi_IMAGE_IN3_AWLEN;
output  [2:0] m_axi_IMAGE_IN3_AWSIZE;
output  [1:0] m_axi_IMAGE_IN3_AWBURST;
output  [1:0] m_axi_IMAGE_IN3_AWLOCK;
output  [3:0] m_axi_IMAGE_IN3_AWCACHE;
output  [2:0] m_axi_IMAGE_IN3_AWPROT;
output  [3:0] m_axi_IMAGE_IN3_AWQOS;
output  [3:0] m_axi_IMAGE_IN3_AWREGION;
output  [C_M_AXI_IMAGE_IN3_AWUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN3_AWUSER;
output   m_axi_IMAGE_IN3_WVALID;
input   m_axi_IMAGE_IN3_WREADY;
output  [C_M_AXI_IMAGE_IN3_DATA_WIDTH - 1 : 0] m_axi_IMAGE_IN3_WDATA;
output  [C_M_AXI_IMAGE_IN3_WSTRB_WIDTH - 1 : 0] m_axi_IMAGE_IN3_WSTRB;
output   m_axi_IMAGE_IN3_WLAST;
output  [C_M_AXI_IMAGE_IN3_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN3_WID;
output  [C_M_AXI_IMAGE_IN3_WUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN3_WUSER;
output   m_axi_IMAGE_IN3_ARVALID;
input   m_axi_IMAGE_IN3_ARREADY;
output  [C_M_AXI_IMAGE_IN3_ADDR_WIDTH - 1 : 0] m_axi_IMAGE_IN3_ARADDR;
output  [C_M_AXI_IMAGE_IN3_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN3_ARID;
output  [7:0] m_axi_IMAGE_IN3_ARLEN;
output  [2:0] m_axi_IMAGE_IN3_ARSIZE;
output  [1:0] m_axi_IMAGE_IN3_ARBURST;
output  [1:0] m_axi_IMAGE_IN3_ARLOCK;
output  [3:0] m_axi_IMAGE_IN3_ARCACHE;
output  [2:0] m_axi_IMAGE_IN3_ARPROT;
output  [3:0] m_axi_IMAGE_IN3_ARQOS;
output  [3:0] m_axi_IMAGE_IN3_ARREGION;
output  [C_M_AXI_IMAGE_IN3_ARUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN3_ARUSER;
input   m_axi_IMAGE_IN3_RVALID;
output   m_axi_IMAGE_IN3_RREADY;
input  [C_M_AXI_IMAGE_IN3_DATA_WIDTH - 1 : 0] m_axi_IMAGE_IN3_RDATA;
input   m_axi_IMAGE_IN3_RLAST;
input  [C_M_AXI_IMAGE_IN3_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN3_RID;
input  [C_M_AXI_IMAGE_IN3_RUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN3_RUSER;
input  [1:0] m_axi_IMAGE_IN3_RRESP;
input   m_axi_IMAGE_IN3_BVALID;
output   m_axi_IMAGE_IN3_BREADY;
input  [1:0] m_axi_IMAGE_IN3_BRESP;
input  [C_M_AXI_IMAGE_IN3_ID_WIDTH - 1 : 0] m_axi_IMAGE_IN3_BID;
input  [C_M_AXI_IMAGE_IN3_BUSER_WIDTH - 1 : 0] m_axi_IMAGE_IN3_BUSER;
output   m_axi_IMAGE_OUT_AWVALID;
input   m_axi_IMAGE_OUT_AWREADY;
output  [C_M_AXI_IMAGE_OUT_ADDR_WIDTH - 1 : 0] m_axi_IMAGE_OUT_AWADDR;
output  [C_M_AXI_IMAGE_OUT_ID_WIDTH - 1 : 0] m_axi_IMAGE_OUT_AWID;
output  [7:0] m_axi_IMAGE_OUT_AWLEN;
output  [2:0] m_axi_IMAGE_OUT_AWSIZE;
output  [1:0] m_axi_IMAGE_OUT_AWBURST;
output  [1:0] m_axi_IMAGE_OUT_AWLOCK;
output  [3:0] m_axi_IMAGE_OUT_AWCACHE;
output  [2:0] m_axi_IMAGE_OUT_AWPROT;
output  [3:0] m_axi_IMAGE_OUT_AWQOS;
output  [3:0] m_axi_IMAGE_OUT_AWREGION;
output  [C_M_AXI_IMAGE_OUT_AWUSER_WIDTH - 1 : 0] m_axi_IMAGE_OUT_AWUSER;
output   m_axi_IMAGE_OUT_WVALID;
input   m_axi_IMAGE_OUT_WREADY;
output  [C_M_AXI_IMAGE_OUT_DATA_WIDTH - 1 : 0] m_axi_IMAGE_OUT_WDATA;
output  [C_M_AXI_IMAGE_OUT_WSTRB_WIDTH - 1 : 0] m_axi_IMAGE_OUT_WSTRB;
output   m_axi_IMAGE_OUT_WLAST;
output  [C_M_AXI_IMAGE_OUT_ID_WIDTH - 1 : 0] m_axi_IMAGE_OUT_WID;
output  [C_M_AXI_IMAGE_OUT_WUSER_WIDTH - 1 : 0] m_axi_IMAGE_OUT_WUSER;
output   m_axi_IMAGE_OUT_ARVALID;
input   m_axi_IMAGE_OUT_ARREADY;
output  [C_M_AXI_IMAGE_OUT_ADDR_WIDTH - 1 : 0] m_axi_IMAGE_OUT_ARADDR;
output  [C_M_AXI_IMAGE_OUT_ID_WIDTH - 1 : 0] m_axi_IMAGE_OUT_ARID;
output  [7:0] m_axi_IMAGE_OUT_ARLEN;
output  [2:0] m_axi_IMAGE_OUT_ARSIZE;
output  [1:0] m_axi_IMAGE_OUT_ARBURST;
output  [1:0] m_axi_IMAGE_OUT_ARLOCK;
output  [3:0] m_axi_IMAGE_OUT_ARCACHE;
output  [2:0] m_axi_IMAGE_OUT_ARPROT;
output  [3:0] m_axi_IMAGE_OUT_ARQOS;
output  [3:0] m_axi_IMAGE_OUT_ARREGION;
output  [C_M_AXI_IMAGE_OUT_ARUSER_WIDTH - 1 : 0] m_axi_IMAGE_OUT_ARUSER;
input   m_axi_IMAGE_OUT_RVALID;
output   m_axi_IMAGE_OUT_RREADY;
input  [C_M_AXI_IMAGE_OUT_DATA_WIDTH - 1 : 0] m_axi_IMAGE_OUT_RDATA;
input   m_axi_IMAGE_OUT_RLAST;
input  [C_M_AXI_IMAGE_OUT_ID_WIDTH - 1 : 0] m_axi_IMAGE_OUT_RID;
input  [C_M_AXI_IMAGE_OUT_RUSER_WIDTH - 1 : 0] m_axi_IMAGE_OUT_RUSER;
input  [1:0] m_axi_IMAGE_OUT_RRESP;
input   m_axi_IMAGE_OUT_BVALID;
output   m_axi_IMAGE_OUT_BREADY;
input  [1:0] m_axi_IMAGE_OUT_BRESP;
input  [C_M_AXI_IMAGE_OUT_ID_WIDTH - 1 : 0] m_axi_IMAGE_OUT_BID;
input  [C_M_AXI_IMAGE_OUT_BUSER_WIDTH - 1 : 0] m_axi_IMAGE_OUT_BUSER;
input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1 : 0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1 : 0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [30:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] imageIn0;
wire   [31:0] imageIn1;
wire   [31:0] imageIn2;
wire   [31:0] imageIn3;
wire   [31:0] imageOut;
reg    IMAGE_IN0_blk_n_AR;
wire   [0:0] ap_CS_fsm_state2;
reg    IMAGE_IN0_blk_n_R;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] exitcond_reg_1101;
reg    IMAGE_IN1_blk_n_AR;
reg    IMAGE_IN1_blk_n_R;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] exitcond1_reg_1125;
reg    IMAGE_IN2_blk_n_AR;
reg    IMAGE_IN2_blk_n_R;
wire   [0:0] ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
reg   [0:0] exitcond2_reg_1149;
reg    IMAGE_IN3_blk_n_AR;
reg    IMAGE_IN3_blk_n_R;
wire   [0:0] ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] exitcond3_reg_1173;
reg    IMAGE_OUT_blk_n_AW;
wire   [0:0] ap_CS_fsm_pp4_stage1;
reg    ap_enable_reg_pp4_iter4;
reg   [0:0] exitcond_flatten_reg_1197;
reg   [0:0] ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197;
reg    IMAGE_OUT_blk_n_W;
wire   [0:0] ap_CS_fsm_pp4_stage2;
reg    IMAGE_OUT_blk_n_B;
wire   [0:0] ap_CS_fsm_pp4_stage7;
wire   [0:0] ap_CS_fsm_pp4_stage6;
wire   [0:0] ap_CS_fsm_pp4_stage12;
wire   [0:0] ap_CS_fsm_pp4_stage11;
wire   [0:0] ap_CS_fsm_pp4_stage4;
reg    ap_enable_reg_pp4_iter5;
reg   [0:0] ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197;
wire   [0:0] ap_CS_fsm_pp4_stage0;
wire    IMAGE_IN0_AWREADY;
wire    IMAGE_IN0_WREADY;
reg    IMAGE_IN0_ARVALID;
wire    IMAGE_IN0_ARREADY;
wire   [31:0] IMAGE_IN0_ARADDR;
wire    IMAGE_IN0_RVALID;
reg    IMAGE_IN0_RREADY;
wire   [31:0] IMAGE_IN0_RDATA;
wire    IMAGE_IN0_RLAST;
wire   [0:0] IMAGE_IN0_RID;
wire   [0:0] IMAGE_IN0_RUSER;
wire   [1:0] IMAGE_IN0_RRESP;
wire    IMAGE_IN0_BVALID;
wire   [1:0] IMAGE_IN0_BRESP;
wire   [0:0] IMAGE_IN0_BID;
wire   [0:0] IMAGE_IN0_BUSER;
wire    IMAGE_IN1_AWREADY;
wire    IMAGE_IN1_WREADY;
reg    IMAGE_IN1_ARVALID;
wire    IMAGE_IN1_ARREADY;
wire   [31:0] IMAGE_IN1_ARADDR;
wire    IMAGE_IN1_RVALID;
reg    IMAGE_IN1_RREADY;
wire   [31:0] IMAGE_IN1_RDATA;
wire    IMAGE_IN1_RLAST;
wire   [0:0] IMAGE_IN1_RID;
wire   [0:0] IMAGE_IN1_RUSER;
wire   [1:0] IMAGE_IN1_RRESP;
wire    IMAGE_IN1_BVALID;
wire   [1:0] IMAGE_IN1_BRESP;
wire   [0:0] IMAGE_IN1_BID;
wire   [0:0] IMAGE_IN1_BUSER;
wire    IMAGE_IN2_AWREADY;
wire    IMAGE_IN2_WREADY;
reg    IMAGE_IN2_ARVALID;
wire    IMAGE_IN2_ARREADY;
wire   [31:0] IMAGE_IN2_ARADDR;
wire    IMAGE_IN2_RVALID;
reg    IMAGE_IN2_RREADY;
wire   [31:0] IMAGE_IN2_RDATA;
wire    IMAGE_IN2_RLAST;
wire   [0:0] IMAGE_IN2_RID;
wire   [0:0] IMAGE_IN2_RUSER;
wire   [1:0] IMAGE_IN2_RRESP;
wire    IMAGE_IN2_BVALID;
wire   [1:0] IMAGE_IN2_BRESP;
wire   [0:0] IMAGE_IN2_BID;
wire   [0:0] IMAGE_IN2_BUSER;
wire    IMAGE_IN3_AWREADY;
wire    IMAGE_IN3_WREADY;
reg    IMAGE_IN3_ARVALID;
wire    IMAGE_IN3_ARREADY;
wire   [31:0] IMAGE_IN3_ARADDR;
wire    IMAGE_IN3_RVALID;
reg    IMAGE_IN3_RREADY;
wire   [31:0] IMAGE_IN3_RDATA;
wire    IMAGE_IN3_RLAST;
wire   [0:0] IMAGE_IN3_RID;
wire   [0:0] IMAGE_IN3_RUSER;
wire   [1:0] IMAGE_IN3_RRESP;
wire    IMAGE_IN3_BVALID;
wire   [1:0] IMAGE_IN3_BRESP;
wire   [0:0] IMAGE_IN3_BID;
wire   [0:0] IMAGE_IN3_BUSER;
reg    IMAGE_OUT_AWVALID;
wire    IMAGE_OUT_AWREADY;
reg   [31:0] IMAGE_OUT_AWADDR;
reg    IMAGE_OUT_WVALID;
wire    IMAGE_OUT_WREADY;
reg   [31:0] IMAGE_OUT_WDATA;
wire    IMAGE_OUT_ARREADY;
wire    IMAGE_OUT_RVALID;
wire   [31:0] IMAGE_OUT_RDATA;
wire    IMAGE_OUT_RLAST;
wire   [0:0] IMAGE_OUT_RID;
wire   [0:0] IMAGE_OUT_RUSER;
wire   [1:0] IMAGE_OUT_RRESP;
wire    IMAGE_OUT_BVALID;
reg    IMAGE_OUT_BREADY;
wire   [1:0] IMAGE_OUT_BRESP;
wire   [0:0] IMAGE_OUT_BID;
wire   [0:0] IMAGE_OUT_BUSER;
reg   [10:0] indvar_reg_392;
reg   [10:0] indvar1_reg_403;
reg   [10:0] indvar2_reg_414;
reg   [10:0] indvar3_reg_425;
reg   [16:0] indvar_flatten_reg_436;
reg   [7:0] rows1_reg_447;
reg   [11:0] cols_reg_458;
wire   [63:0] grp_fu_479_p2;
reg   [63:0] reg_485;
reg    ap_enable_reg_pp4_iter1;
reg    ap_sig_ioackin_IMAGE_OUT_AWREADY;
reg    ap_sig_ioackin_IMAGE_OUT_WREADY;
reg   [0:0] ap_pipeline_reg_pp4_iter1_exitcond_flatten_reg_1197;
reg    ap_enable_reg_pp4_iter3;
reg   [0:0] ap_pipeline_reg_pp4_iter3_exitcond_flatten_reg_1197;
wire   [31:0] grp_fu_469_p1;
reg   [31:0] reg_491;
reg   [63:0] reg_496;
reg   [29:0] tmp_2_reg_1027;
reg   [29:0] imageIn_reg_1032;
reg   [29:0] imageIn4_reg_1037;
reg   [29:0] imageIn5_reg_1042;
reg   [29:0] imageIn6_reg_1047;
reg    ap_sig_ioackin_IMAGE_IN0_ARREADY;
reg    ap_sig_ioackin_IMAGE_IN1_ARREADY;
reg    ap_sig_ioackin_IMAGE_IN2_ARREADY;
reg    ap_sig_ioackin_IMAGE_IN3_ARREADY;
wire   [30:0] tmp_2_cast_fu_591_p1;
reg   [30:0] tmp_2_cast_reg_1076;
wire   [0:0] ap_CS_fsm_state8;
wire   [0:0] tmp_fu_594_p2;
wire   [0:0] ap_CS_fsm_state9;
wire   [6:0] rows_2_fu_600_p2;
reg   [6:0] rows_2_reg_1088;
wire   [15:0] tmp_1_fu_610_p3;
reg   [15:0] tmp_1_reg_1093;
wire   [0:0] exitcond_fu_618_p2;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_reg_1101;
wire   [10:0] indvar_next_fu_624_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [9:0] tmp_37_fu_634_p1;
reg   [9:0] tmp_37_reg_1110;
reg   [9:0] ap_pipeline_reg_pp0_iter1_tmp_37_reg_1110;
reg   [5:0] tmp_9_reg_1115;
reg   [5:0] ap_pipeline_reg_pp0_iter1_tmp_9_reg_1115;
reg   [31:0] IMAGE_IN0_addr_read_reg_1120;
wire   [0:0] exitcond1_fu_664_p2;
reg   [0:0] ap_pipeline_reg_pp1_iter1_exitcond1_reg_1125;
wire   [10:0] indvar_next1_fu_670_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [9:0] tmp_40_fu_680_p1;
reg   [9:0] tmp_40_reg_1134;
reg   [9:0] ap_pipeline_reg_pp1_iter1_tmp_40_reg_1134;
reg   [5:0] tmp_41_reg_1139;
reg   [5:0] ap_pipeline_reg_pp1_iter1_tmp_41_reg_1139;
reg   [31:0] IMAGE_IN1_addr_read_reg_1144;
wire   [0:0] exitcond2_fu_710_p2;
reg   [0:0] ap_pipeline_reg_pp2_iter1_exitcond2_reg_1149;
wire   [10:0] indvar_next2_fu_716_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [9:0] tmp_44_fu_726_p1;
reg   [9:0] tmp_44_reg_1158;
reg   [9:0] ap_pipeline_reg_pp2_iter1_tmp_44_reg_1158;
reg   [5:0] tmp_45_reg_1163;
reg   [5:0] ap_pipeline_reg_pp2_iter1_tmp_45_reg_1163;
reg   [31:0] IMAGE_IN2_addr_read_reg_1168;
wire   [0:0] exitcond3_fu_756_p2;
reg   [0:0] ap_pipeline_reg_pp3_iter1_exitcond3_reg_1173;
wire   [10:0] indvar_next3_fu_762_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [9:0] tmp_48_fu_772_p1;
reg   [9:0] tmp_48_reg_1182;
reg   [9:0] ap_pipeline_reg_pp3_iter1_tmp_48_reg_1182;
reg   [5:0] tmp_49_reg_1187;
reg   [5:0] ap_pipeline_reg_pp3_iter1_tmp_49_reg_1187;
reg   [31:0] IMAGE_IN3_addr_read_reg_1192;
wire   [0:0] exitcond_flatten_fu_802_p2;
reg   [0:0] ap_pipeline_reg_pp4_iter2_exitcond_flatten_reg_1197;
wire   [16:0] indvar_flatten_next_fu_808_p2;
reg   [16:0] indvar_flatten_next_reg_1201;
reg    ap_enable_reg_pp4_iter0;
wire   [11:0] cols_mid2_fu_828_p3;
reg   [11:0] cols_mid2_reg_1206;
reg   [11:0] ap_pipeline_reg_pp4_iter1_cols_mid2_reg_1206;
reg   [11:0] ap_pipeline_reg_pp4_iter2_cols_mid2_reg_1206;
reg   [11:0] ap_pipeline_reg_pp4_iter3_cols_mid2_reg_1206;
wire   [7:0] tmp_5_mid2_v_v_fu_836_p3;
reg   [7:0] tmp_5_mid2_v_v_reg_1212;
reg   [6:0] tmp_5_mid2_v_reg_1217;
reg   [10:0] tmp_12_reg_1222;
reg   [5:0] tmp_34_reg_1227;
reg   [5:0] ap_pipeline_reg_pp4_iter1_tmp_34_reg_1227;
reg   [5:0] ap_pipeline_reg_pp4_iter2_tmp_34_reg_1227;
reg   [5:0] ap_pipeline_reg_pp4_iter3_tmp_34_reg_1227;
wire   [18:0] idx2_fu_900_p2;
reg   [18:0] idx2_reg_1232;
reg   [18:0] ap_pipeline_reg_pp4_iter1_idx2_reg_1232;
reg   [18:0] ap_pipeline_reg_pp4_iter2_idx2_reg_1232;
reg   [18:0] ap_pipeline_reg_pp4_iter3_idx2_reg_1232;
reg   [18:0] ap_pipeline_reg_pp4_iter4_idx2_reg_1232;
wire   [63:0] tmp_44_cast_fu_926_p1;
reg   [63:0] tmp_44_cast_reg_1238;
reg   [63:0] ap_pipeline_reg_pp4_iter1_tmp_44_cast_reg_1238;
wire   [31:0] image0_q0;
reg   [31:0] pixelIn0_reg_1255;
wire   [31:0] image1_q0;
reg   [31:0] pixelIn1_reg_1260;
wire   [0:0] ap_CS_fsm_pp4_stage3;
wire   [63:0] grp_fu_472_p1;
reg   [63:0] tmp_14_reg_1265;
reg   [63:0] tmp_16_reg_1270;
wire   [11:0] cols_1_fu_931_p2;
reg   [11:0] cols_1_reg_1275;
reg   [63:0] tmp_15_reg_1280;
wire   [31:0] image2_q0;
reg   [31:0] pixelIn2_reg_1295;
wire   [31:0] image3_q0;
reg   [31:0] pixelIn3_reg_1300;
reg   [31:0] ap_pipeline_reg_pp4_iter2_pixelIn3_reg_1300;
reg   [63:0] tmp_19_reg_1305;
wire   [0:0] ap_CS_fsm_pp4_stage5;
wire   [63:0] grp_fu_475_p2;
reg   [63:0] tmp_18_reg_1310;
wire   [0:0] ap_CS_fsm_pp4_stage10;
reg   [63:0] tmp_27_reg_1315;
reg   [63:0] tmp_20_reg_1320;
reg    ap_enable_reg_pp4_iter2;
reg   [63:0] tmp_21_reg_1325;
reg   [63:0] tmp_24_reg_1330;
reg   [63:0] tmp_28_reg_1335;
wire   [0:0] ap_CS_fsm_pp4_stage8;
reg   [63:0] tmp_31_reg_1340;
wire   [0:0] ap_CS_fsm_pp4_stage9;
reg   [63:0] tmp_22_reg_1345;
reg   [63:0] tmp_25_reg_1350;
reg   [63:0] tmp_29_reg_1355;
reg   [63:0] tmp_32_reg_1360;
wire   [17:0] idx1_fu_936_p3;
reg   [17:0] idx1_reg_1365;
wire   [30:0] imageOut10_sum_fu_946_p2;
reg   [30:0] imageOut10_sum_reg_1370;
reg   [63:0] tmp_30_reg_1380;
reg   [31:0] pixelOut2_reg_1385;
wire   [30:0] imageOut10_sum1_fu_970_p2;
reg   [30:0] imageOut10_sum1_reg_1390;
reg   [31:0] pixelOut3_reg_1395;
wire   [30:0] imageOut10_sum2_fu_988_p2;
reg   [30:0] imageOut10_sum2_reg_1405;
wire   [30:0] imageOut10_sum3_fu_1012_p2;
reg   [30:0] imageOut10_sum3_reg_1415;
reg    ap_enable_reg_pp0_iter2;
wire   [0:0] ap_CS_fsm_state13;
reg    ap_enable_reg_pp1_iter2;
wire   [0:0] ap_CS_fsm_state17;
reg    ap_enable_reg_pp2_iter2;
wire   [0:0] ap_CS_fsm_state21;
reg    ap_enable_reg_pp3_iter2;
reg   [15:0] image0_address0;
reg    image0_ce0;
reg    image0_we0;
reg   [15:0] image1_address0;
reg    image1_ce0;
reg    image1_we0;
reg   [15:0] image2_address0;
reg    image2_ce0;
reg    image2_we0;
reg   [15:0] image3_address0;
reg    image3_ce0;
reg    image3_we0;
reg   [6:0] rows_reg_381;
wire   [0:0] ap_CS_fsm_state25;
reg   [16:0] indvar_flatten_phi_fu_440_p4;
reg   [7:0] rows1_phi_fu_451_p4;
reg   [11:0] cols_phi_fu_462_p4;
wire   [63:0] tmp_39_fu_659_p1;
wire   [63:0] tmp_43_fu_705_p1;
wire   [63:0] tmp_47_fu_751_p1;
wire   [63:0] tmp_51_fu_797_p1;
wire   [63:0] tmp_3_fu_551_p1;
wire   [63:0] tmp_4_fu_561_p1;
wire   [63:0] tmp_5_fu_571_p1;
wire   [63:0] tmp_6_fu_581_p1;
wire   [63:0] imageOut10_sum_cast_fu_951_p1;
wire   [63:0] imageOut10_sum1_cast_fu_975_p1;
wire   [63:0] imageOut10_sum2_cast_fu_993_p1;
wire   [63:0] imageOut10_sum3_cast_fu_1017_p1;
reg    ap_reg_ioackin_IMAGE_IN0_ARREADY;
reg    ap_reg_ioackin_IMAGE_IN1_ARREADY;
reg    ap_reg_ioackin_IMAGE_IN2_ARREADY;
reg    ap_reg_ioackin_IMAGE_IN3_ARREADY;
reg    ap_reg_ioackin_IMAGE_OUT_AWREADY;
reg    ap_reg_ioackin_IMAGE_OUT_WREADY;
reg   [63:0] grp_fu_469_p0;
reg   [31:0] grp_fu_472_p0;
reg   [63:0] grp_fu_475_p0;
reg   [63:0] grp_fu_475_p1;
reg   [63:0] grp_fu_479_p0;
reg   [63:0] grp_fu_479_p1;
wire   [5:0] tmp_7_fu_606_p1;
wire   [15:0] indvar_cast9_fu_630_p1;
wire   [15:0] imageIn0_addr_fu_638_p2;
wire   [15:0] tmp_38_fu_653_p3;
wire   [15:0] indvar1_cast7_fu_676_p1;
wire   [15:0] imageIn1_addr_fu_684_p2;
wire   [15:0] tmp_42_fu_699_p3;
wire   [15:0] indvar2_cast5_fu_722_p1;
wire   [15:0] imageIn2_addr_fu_730_p2;
wire   [15:0] tmp_46_fu_745_p3;
wire   [15:0] indvar3_cast3_fu_768_p1;
wire   [15:0] imageIn3_addr_fu_776_p2;
wire   [15:0] tmp_50_fu_791_p3;
wire   [0:0] tmp_8_fu_820_p3;
wire   [7:0] rows_1_fu_814_p2;
wire   [6:0] tmp_10_fu_854_p1;
wire   [17:0] tmp_7_cast_mid2_v_v_fu_858_p3;
wire   [17:0] tmp_7_cast_mid2_v_fu_866_p2;
wire   [18:0] cols_cast1_fu_876_p1;
wire   [18:0] tmp_7_cast_mid2_fu_872_p1;
wire   [16:0] tmp_s_fu_906_p3;
wire   [17:0] tmp_11_cast_fu_913_p1;
wire   [17:0] tmp_14_cast_fu_917_p1;
wire   [17:0] tmp_13_fu_920_p2;
wire   [30:0] tmp_35_cast_fu_942_p1;
wire   [17:0] tmp_35_fu_961_p2;
wire   [30:0] tmp_37_cast_fu_966_p1;
wire   [30:0] tmp_38_cast_fu_985_p1;
wire   [18:0] tmp_36_fu_1003_p2;
wire   [30:0] tmp_40_cast_fu_1008_p1;
reg    grp_fu_469_ce;
reg   [1:0] grp_fu_475_opcode;
reg    grp_fu_475_ce;
reg    grp_fu_479_ce;
wire   [0:0] ap_CS_fsm_state98;
reg   [30:0] ap_NS_fsm;
reg    ap_condition_1465;
reg    ap_condition_926;

// power-on initialization
initial begin
#0 ap_CS_fsm = 31'b1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_reg_ioackin_IMAGE_IN0_ARREADY = 1'b0;
#0 ap_reg_ioackin_IMAGE_IN1_ARREADY = 1'b0;
#0 ap_reg_ioackin_IMAGE_IN2_ARREADY = 1'b0;
#0 ap_reg_ioackin_IMAGE_IN3_ARREADY = 1'b0;
#0 ap_reg_ioackin_IMAGE_OUT_AWREADY = 1'b0;
#0 ap_reg_ioackin_IMAGE_OUT_WREADY = 1'b0;
end

idwt_CONTROL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
idwt_CONTROL_BUS_s_axi_U(
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .imageIn0(imageIn0),
    .imageIn1(imageIn1),
    .imageIn2(imageIn2),
    .imageIn3(imageIn3),
    .imageOut(imageOut)
);

idwt_IMAGE_IN0_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_IMAGE_IN0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_IMAGE_IN0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_IMAGE_IN0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_IMAGE_IN0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_IMAGE_IN0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_IMAGE_IN0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_IMAGE_IN0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_IMAGE_IN0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_IMAGE_IN0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_IMAGE_IN0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_IMAGE_IN0_CACHE_VALUE ))
idwt_IMAGE_IN0_m_axi_U(
    .AWVALID(m_axi_IMAGE_IN0_AWVALID),
    .AWREADY(m_axi_IMAGE_IN0_AWREADY),
    .AWADDR(m_axi_IMAGE_IN0_AWADDR),
    .AWID(m_axi_IMAGE_IN0_AWID),
    .AWLEN(m_axi_IMAGE_IN0_AWLEN),
    .AWSIZE(m_axi_IMAGE_IN0_AWSIZE),
    .AWBURST(m_axi_IMAGE_IN0_AWBURST),
    .AWLOCK(m_axi_IMAGE_IN0_AWLOCK),
    .AWCACHE(m_axi_IMAGE_IN0_AWCACHE),
    .AWPROT(m_axi_IMAGE_IN0_AWPROT),
    .AWQOS(m_axi_IMAGE_IN0_AWQOS),
    .AWREGION(m_axi_IMAGE_IN0_AWREGION),
    .AWUSER(m_axi_IMAGE_IN0_AWUSER),
    .WVALID(m_axi_IMAGE_IN0_WVALID),
    .WREADY(m_axi_IMAGE_IN0_WREADY),
    .WDATA(m_axi_IMAGE_IN0_WDATA),
    .WSTRB(m_axi_IMAGE_IN0_WSTRB),
    .WLAST(m_axi_IMAGE_IN0_WLAST),
    .WID(m_axi_IMAGE_IN0_WID),
    .WUSER(m_axi_IMAGE_IN0_WUSER),
    .ARVALID(m_axi_IMAGE_IN0_ARVALID),
    .ARREADY(m_axi_IMAGE_IN0_ARREADY),
    .ARADDR(m_axi_IMAGE_IN0_ARADDR),
    .ARID(m_axi_IMAGE_IN0_ARID),
    .ARLEN(m_axi_IMAGE_IN0_ARLEN),
    .ARSIZE(m_axi_IMAGE_IN0_ARSIZE),
    .ARBURST(m_axi_IMAGE_IN0_ARBURST),
    .ARLOCK(m_axi_IMAGE_IN0_ARLOCK),
    .ARCACHE(m_axi_IMAGE_IN0_ARCACHE),
    .ARPROT(m_axi_IMAGE_IN0_ARPROT),
    .ARQOS(m_axi_IMAGE_IN0_ARQOS),
    .ARREGION(m_axi_IMAGE_IN0_ARREGION),
    .ARUSER(m_axi_IMAGE_IN0_ARUSER),
    .RVALID(m_axi_IMAGE_IN0_RVALID),
    .RREADY(m_axi_IMAGE_IN0_RREADY),
    .RDATA(m_axi_IMAGE_IN0_RDATA),
    .RLAST(m_axi_IMAGE_IN0_RLAST),
    .RID(m_axi_IMAGE_IN0_RID),
    .RUSER(m_axi_IMAGE_IN0_RUSER),
    .RRESP(m_axi_IMAGE_IN0_RRESP),
    .BVALID(m_axi_IMAGE_IN0_BVALID),
    .BREADY(m_axi_IMAGE_IN0_BREADY),
    .BRESP(m_axi_IMAGE_IN0_BRESP),
    .BID(m_axi_IMAGE_IN0_BID),
    .BUSER(m_axi_IMAGE_IN0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(IMAGE_IN0_ARVALID),
    .I_ARREADY(IMAGE_IN0_ARREADY),
    .I_ARADDR(IMAGE_IN0_ARADDR),
    .I_ARID(1'b0),
    .I_ARLEN(ap_const_lv32_10000),
    .I_ARSIZE(ap_const_lv3_0),
    .I_ARLOCK(ap_const_lv2_0),
    .I_ARCACHE(ap_const_lv4_0),
    .I_ARQOS(ap_const_lv4_0),
    .I_ARPROT(ap_const_lv3_0),
    .I_ARUSER(1'b0),
    .I_ARBURST(ap_const_lv2_0),
    .I_ARREGION(ap_const_lv4_0),
    .I_RVALID(IMAGE_IN0_RVALID),
    .I_RREADY(IMAGE_IN0_RREADY),
    .I_RDATA(IMAGE_IN0_RDATA),
    .I_RID(IMAGE_IN0_RID),
    .I_RUSER(IMAGE_IN0_RUSER),
    .I_RRESP(IMAGE_IN0_RRESP),
    .I_RLAST(IMAGE_IN0_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(IMAGE_IN0_AWREADY),
    .I_AWADDR(ap_const_lv32_0),
    .I_AWID(1'b0),
    .I_AWLEN(ap_const_lv32_0),
    .I_AWSIZE(ap_const_lv3_0),
    .I_AWLOCK(ap_const_lv2_0),
    .I_AWCACHE(ap_const_lv4_0),
    .I_AWQOS(ap_const_lv4_0),
    .I_AWPROT(ap_const_lv3_0),
    .I_AWUSER(1'b0),
    .I_AWBURST(ap_const_lv2_0),
    .I_AWREGION(ap_const_lv4_0),
    .I_WVALID(1'b0),
    .I_WREADY(IMAGE_IN0_WREADY),
    .I_WDATA(ap_const_lv32_0),
    .I_WID(1'b0),
    .I_WUSER(1'b0),
    .I_WLAST(1'b0),
    .I_WSTRB(ap_const_lv4_0),
    .I_BVALID(IMAGE_IN0_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(IMAGE_IN0_BRESP),
    .I_BID(IMAGE_IN0_BID),
    .I_BUSER(IMAGE_IN0_BUSER)
);

idwt_IMAGE_IN1_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_IMAGE_IN1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_IMAGE_IN1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_IMAGE_IN1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_IMAGE_IN1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_IMAGE_IN1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_IMAGE_IN1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_IMAGE_IN1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_IMAGE_IN1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_IMAGE_IN1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_IMAGE_IN1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_IMAGE_IN1_CACHE_VALUE ))
idwt_IMAGE_IN1_m_axi_U(
    .AWVALID(m_axi_IMAGE_IN1_AWVALID),
    .AWREADY(m_axi_IMAGE_IN1_AWREADY),
    .AWADDR(m_axi_IMAGE_IN1_AWADDR),
    .AWID(m_axi_IMAGE_IN1_AWID),
    .AWLEN(m_axi_IMAGE_IN1_AWLEN),
    .AWSIZE(m_axi_IMAGE_IN1_AWSIZE),
    .AWBURST(m_axi_IMAGE_IN1_AWBURST),
    .AWLOCK(m_axi_IMAGE_IN1_AWLOCK),
    .AWCACHE(m_axi_IMAGE_IN1_AWCACHE),
    .AWPROT(m_axi_IMAGE_IN1_AWPROT),
    .AWQOS(m_axi_IMAGE_IN1_AWQOS),
    .AWREGION(m_axi_IMAGE_IN1_AWREGION),
    .AWUSER(m_axi_IMAGE_IN1_AWUSER),
    .WVALID(m_axi_IMAGE_IN1_WVALID),
    .WREADY(m_axi_IMAGE_IN1_WREADY),
    .WDATA(m_axi_IMAGE_IN1_WDATA),
    .WSTRB(m_axi_IMAGE_IN1_WSTRB),
    .WLAST(m_axi_IMAGE_IN1_WLAST),
    .WID(m_axi_IMAGE_IN1_WID),
    .WUSER(m_axi_IMAGE_IN1_WUSER),
    .ARVALID(m_axi_IMAGE_IN1_ARVALID),
    .ARREADY(m_axi_IMAGE_IN1_ARREADY),
    .ARADDR(m_axi_IMAGE_IN1_ARADDR),
    .ARID(m_axi_IMAGE_IN1_ARID),
    .ARLEN(m_axi_IMAGE_IN1_ARLEN),
    .ARSIZE(m_axi_IMAGE_IN1_ARSIZE),
    .ARBURST(m_axi_IMAGE_IN1_ARBURST),
    .ARLOCK(m_axi_IMAGE_IN1_ARLOCK),
    .ARCACHE(m_axi_IMAGE_IN1_ARCACHE),
    .ARPROT(m_axi_IMAGE_IN1_ARPROT),
    .ARQOS(m_axi_IMAGE_IN1_ARQOS),
    .ARREGION(m_axi_IMAGE_IN1_ARREGION),
    .ARUSER(m_axi_IMAGE_IN1_ARUSER),
    .RVALID(m_axi_IMAGE_IN1_RVALID),
    .RREADY(m_axi_IMAGE_IN1_RREADY),
    .RDATA(m_axi_IMAGE_IN1_RDATA),
    .RLAST(m_axi_IMAGE_IN1_RLAST),
    .RID(m_axi_IMAGE_IN1_RID),
    .RUSER(m_axi_IMAGE_IN1_RUSER),
    .RRESP(m_axi_IMAGE_IN1_RRESP),
    .BVALID(m_axi_IMAGE_IN1_BVALID),
    .BREADY(m_axi_IMAGE_IN1_BREADY),
    .BRESP(m_axi_IMAGE_IN1_BRESP),
    .BID(m_axi_IMAGE_IN1_BID),
    .BUSER(m_axi_IMAGE_IN1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(IMAGE_IN1_ARVALID),
    .I_ARREADY(IMAGE_IN1_ARREADY),
    .I_ARADDR(IMAGE_IN1_ARADDR),
    .I_ARID(1'b0),
    .I_ARLEN(ap_const_lv32_10000),
    .I_ARSIZE(ap_const_lv3_0),
    .I_ARLOCK(ap_const_lv2_0),
    .I_ARCACHE(ap_const_lv4_0),
    .I_ARQOS(ap_const_lv4_0),
    .I_ARPROT(ap_const_lv3_0),
    .I_ARUSER(1'b0),
    .I_ARBURST(ap_const_lv2_0),
    .I_ARREGION(ap_const_lv4_0),
    .I_RVALID(IMAGE_IN1_RVALID),
    .I_RREADY(IMAGE_IN1_RREADY),
    .I_RDATA(IMAGE_IN1_RDATA),
    .I_RID(IMAGE_IN1_RID),
    .I_RUSER(IMAGE_IN1_RUSER),
    .I_RRESP(IMAGE_IN1_RRESP),
    .I_RLAST(IMAGE_IN1_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(IMAGE_IN1_AWREADY),
    .I_AWADDR(ap_const_lv32_0),
    .I_AWID(1'b0),
    .I_AWLEN(ap_const_lv32_0),
    .I_AWSIZE(ap_const_lv3_0),
    .I_AWLOCK(ap_const_lv2_0),
    .I_AWCACHE(ap_const_lv4_0),
    .I_AWQOS(ap_const_lv4_0),
    .I_AWPROT(ap_const_lv3_0),
    .I_AWUSER(1'b0),
    .I_AWBURST(ap_const_lv2_0),
    .I_AWREGION(ap_const_lv4_0),
    .I_WVALID(1'b0),
    .I_WREADY(IMAGE_IN1_WREADY),
    .I_WDATA(ap_const_lv32_0),
    .I_WID(1'b0),
    .I_WUSER(1'b0),
    .I_WLAST(1'b0),
    .I_WSTRB(ap_const_lv4_0),
    .I_BVALID(IMAGE_IN1_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(IMAGE_IN1_BRESP),
    .I_BID(IMAGE_IN1_BID),
    .I_BUSER(IMAGE_IN1_BUSER)
);

idwt_IMAGE_IN2_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_IMAGE_IN2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_IMAGE_IN2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_IMAGE_IN2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_IMAGE_IN2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_IMAGE_IN2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_IMAGE_IN2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_IMAGE_IN2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_IMAGE_IN2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_IMAGE_IN2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_IMAGE_IN2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_IMAGE_IN2_CACHE_VALUE ))
idwt_IMAGE_IN2_m_axi_U(
    .AWVALID(m_axi_IMAGE_IN2_AWVALID),
    .AWREADY(m_axi_IMAGE_IN2_AWREADY),
    .AWADDR(m_axi_IMAGE_IN2_AWADDR),
    .AWID(m_axi_IMAGE_IN2_AWID),
    .AWLEN(m_axi_IMAGE_IN2_AWLEN),
    .AWSIZE(m_axi_IMAGE_IN2_AWSIZE),
    .AWBURST(m_axi_IMAGE_IN2_AWBURST),
    .AWLOCK(m_axi_IMAGE_IN2_AWLOCK),
    .AWCACHE(m_axi_IMAGE_IN2_AWCACHE),
    .AWPROT(m_axi_IMAGE_IN2_AWPROT),
    .AWQOS(m_axi_IMAGE_IN2_AWQOS),
    .AWREGION(m_axi_IMAGE_IN2_AWREGION),
    .AWUSER(m_axi_IMAGE_IN2_AWUSER),
    .WVALID(m_axi_IMAGE_IN2_WVALID),
    .WREADY(m_axi_IMAGE_IN2_WREADY),
    .WDATA(m_axi_IMAGE_IN2_WDATA),
    .WSTRB(m_axi_IMAGE_IN2_WSTRB),
    .WLAST(m_axi_IMAGE_IN2_WLAST),
    .WID(m_axi_IMAGE_IN2_WID),
    .WUSER(m_axi_IMAGE_IN2_WUSER),
    .ARVALID(m_axi_IMAGE_IN2_ARVALID),
    .ARREADY(m_axi_IMAGE_IN2_ARREADY),
    .ARADDR(m_axi_IMAGE_IN2_ARADDR),
    .ARID(m_axi_IMAGE_IN2_ARID),
    .ARLEN(m_axi_IMAGE_IN2_ARLEN),
    .ARSIZE(m_axi_IMAGE_IN2_ARSIZE),
    .ARBURST(m_axi_IMAGE_IN2_ARBURST),
    .ARLOCK(m_axi_IMAGE_IN2_ARLOCK),
    .ARCACHE(m_axi_IMAGE_IN2_ARCACHE),
    .ARPROT(m_axi_IMAGE_IN2_ARPROT),
    .ARQOS(m_axi_IMAGE_IN2_ARQOS),
    .ARREGION(m_axi_IMAGE_IN2_ARREGION),
    .ARUSER(m_axi_IMAGE_IN2_ARUSER),
    .RVALID(m_axi_IMAGE_IN2_RVALID),
    .RREADY(m_axi_IMAGE_IN2_RREADY),
    .RDATA(m_axi_IMAGE_IN2_RDATA),
    .RLAST(m_axi_IMAGE_IN2_RLAST),
    .RID(m_axi_IMAGE_IN2_RID),
    .RUSER(m_axi_IMAGE_IN2_RUSER),
    .RRESP(m_axi_IMAGE_IN2_RRESP),
    .BVALID(m_axi_IMAGE_IN2_BVALID),
    .BREADY(m_axi_IMAGE_IN2_BREADY),
    .BRESP(m_axi_IMAGE_IN2_BRESP),
    .BID(m_axi_IMAGE_IN2_BID),
    .BUSER(m_axi_IMAGE_IN2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(IMAGE_IN2_ARVALID),
    .I_ARREADY(IMAGE_IN2_ARREADY),
    .I_ARADDR(IMAGE_IN2_ARADDR),
    .I_ARID(1'b0),
    .I_ARLEN(ap_const_lv32_10000),
    .I_ARSIZE(ap_const_lv3_0),
    .I_ARLOCK(ap_const_lv2_0),
    .I_ARCACHE(ap_const_lv4_0),
    .I_ARQOS(ap_const_lv4_0),
    .I_ARPROT(ap_const_lv3_0),
    .I_ARUSER(1'b0),
    .I_ARBURST(ap_const_lv2_0),
    .I_ARREGION(ap_const_lv4_0),
    .I_RVALID(IMAGE_IN2_RVALID),
    .I_RREADY(IMAGE_IN2_RREADY),
    .I_RDATA(IMAGE_IN2_RDATA),
    .I_RID(IMAGE_IN2_RID),
    .I_RUSER(IMAGE_IN2_RUSER),
    .I_RRESP(IMAGE_IN2_RRESP),
    .I_RLAST(IMAGE_IN2_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(IMAGE_IN2_AWREADY),
    .I_AWADDR(ap_const_lv32_0),
    .I_AWID(1'b0),
    .I_AWLEN(ap_const_lv32_0),
    .I_AWSIZE(ap_const_lv3_0),
    .I_AWLOCK(ap_const_lv2_0),
    .I_AWCACHE(ap_const_lv4_0),
    .I_AWQOS(ap_const_lv4_0),
    .I_AWPROT(ap_const_lv3_0),
    .I_AWUSER(1'b0),
    .I_AWBURST(ap_const_lv2_0),
    .I_AWREGION(ap_const_lv4_0),
    .I_WVALID(1'b0),
    .I_WREADY(IMAGE_IN2_WREADY),
    .I_WDATA(ap_const_lv32_0),
    .I_WID(1'b0),
    .I_WUSER(1'b0),
    .I_WLAST(1'b0),
    .I_WSTRB(ap_const_lv4_0),
    .I_BVALID(IMAGE_IN2_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(IMAGE_IN2_BRESP),
    .I_BID(IMAGE_IN2_BID),
    .I_BUSER(IMAGE_IN2_BUSER)
);

idwt_IMAGE_IN3_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_IMAGE_IN3_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_IMAGE_IN3_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_IMAGE_IN3_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_IMAGE_IN3_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_IMAGE_IN3_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_IMAGE_IN3_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_IMAGE_IN3_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_IMAGE_IN3_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_IMAGE_IN3_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_IMAGE_IN3_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_IMAGE_IN3_CACHE_VALUE ))
idwt_IMAGE_IN3_m_axi_U(
    .AWVALID(m_axi_IMAGE_IN3_AWVALID),
    .AWREADY(m_axi_IMAGE_IN3_AWREADY),
    .AWADDR(m_axi_IMAGE_IN3_AWADDR),
    .AWID(m_axi_IMAGE_IN3_AWID),
    .AWLEN(m_axi_IMAGE_IN3_AWLEN),
    .AWSIZE(m_axi_IMAGE_IN3_AWSIZE),
    .AWBURST(m_axi_IMAGE_IN3_AWBURST),
    .AWLOCK(m_axi_IMAGE_IN3_AWLOCK),
    .AWCACHE(m_axi_IMAGE_IN3_AWCACHE),
    .AWPROT(m_axi_IMAGE_IN3_AWPROT),
    .AWQOS(m_axi_IMAGE_IN3_AWQOS),
    .AWREGION(m_axi_IMAGE_IN3_AWREGION),
    .AWUSER(m_axi_IMAGE_IN3_AWUSER),
    .WVALID(m_axi_IMAGE_IN3_WVALID),
    .WREADY(m_axi_IMAGE_IN3_WREADY),
    .WDATA(m_axi_IMAGE_IN3_WDATA),
    .WSTRB(m_axi_IMAGE_IN3_WSTRB),
    .WLAST(m_axi_IMAGE_IN3_WLAST),
    .WID(m_axi_IMAGE_IN3_WID),
    .WUSER(m_axi_IMAGE_IN3_WUSER),
    .ARVALID(m_axi_IMAGE_IN3_ARVALID),
    .ARREADY(m_axi_IMAGE_IN3_ARREADY),
    .ARADDR(m_axi_IMAGE_IN3_ARADDR),
    .ARID(m_axi_IMAGE_IN3_ARID),
    .ARLEN(m_axi_IMAGE_IN3_ARLEN),
    .ARSIZE(m_axi_IMAGE_IN3_ARSIZE),
    .ARBURST(m_axi_IMAGE_IN3_ARBURST),
    .ARLOCK(m_axi_IMAGE_IN3_ARLOCK),
    .ARCACHE(m_axi_IMAGE_IN3_ARCACHE),
    .ARPROT(m_axi_IMAGE_IN3_ARPROT),
    .ARQOS(m_axi_IMAGE_IN3_ARQOS),
    .ARREGION(m_axi_IMAGE_IN3_ARREGION),
    .ARUSER(m_axi_IMAGE_IN3_ARUSER),
    .RVALID(m_axi_IMAGE_IN3_RVALID),
    .RREADY(m_axi_IMAGE_IN3_RREADY),
    .RDATA(m_axi_IMAGE_IN3_RDATA),
    .RLAST(m_axi_IMAGE_IN3_RLAST),
    .RID(m_axi_IMAGE_IN3_RID),
    .RUSER(m_axi_IMAGE_IN3_RUSER),
    .RRESP(m_axi_IMAGE_IN3_RRESP),
    .BVALID(m_axi_IMAGE_IN3_BVALID),
    .BREADY(m_axi_IMAGE_IN3_BREADY),
    .BRESP(m_axi_IMAGE_IN3_BRESP),
    .BID(m_axi_IMAGE_IN3_BID),
    .BUSER(m_axi_IMAGE_IN3_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(IMAGE_IN3_ARVALID),
    .I_ARREADY(IMAGE_IN3_ARREADY),
    .I_ARADDR(IMAGE_IN3_ARADDR),
    .I_ARID(1'b0),
    .I_ARLEN(ap_const_lv32_10000),
    .I_ARSIZE(ap_const_lv3_0),
    .I_ARLOCK(ap_const_lv2_0),
    .I_ARCACHE(ap_const_lv4_0),
    .I_ARQOS(ap_const_lv4_0),
    .I_ARPROT(ap_const_lv3_0),
    .I_ARUSER(1'b0),
    .I_ARBURST(ap_const_lv2_0),
    .I_ARREGION(ap_const_lv4_0),
    .I_RVALID(IMAGE_IN3_RVALID),
    .I_RREADY(IMAGE_IN3_RREADY),
    .I_RDATA(IMAGE_IN3_RDATA),
    .I_RID(IMAGE_IN3_RID),
    .I_RUSER(IMAGE_IN3_RUSER),
    .I_RRESP(IMAGE_IN3_RRESP),
    .I_RLAST(IMAGE_IN3_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(IMAGE_IN3_AWREADY),
    .I_AWADDR(ap_const_lv32_0),
    .I_AWID(1'b0),
    .I_AWLEN(ap_const_lv32_0),
    .I_AWSIZE(ap_const_lv3_0),
    .I_AWLOCK(ap_const_lv2_0),
    .I_AWCACHE(ap_const_lv4_0),
    .I_AWQOS(ap_const_lv4_0),
    .I_AWPROT(ap_const_lv3_0),
    .I_AWUSER(1'b0),
    .I_AWBURST(ap_const_lv2_0),
    .I_AWREGION(ap_const_lv4_0),
    .I_WVALID(1'b0),
    .I_WREADY(IMAGE_IN3_WREADY),
    .I_WDATA(ap_const_lv32_0),
    .I_WID(1'b0),
    .I_WUSER(1'b0),
    .I_WLAST(1'b0),
    .I_WSTRB(ap_const_lv4_0),
    .I_BVALID(IMAGE_IN3_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(IMAGE_IN3_BRESP),
    .I_BID(IMAGE_IN3_BID),
    .I_BUSER(IMAGE_IN3_BUSER)
);

idwt_IMAGE_OUT_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_IMAGE_OUT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_IMAGE_OUT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_IMAGE_OUT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_IMAGE_OUT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_IMAGE_OUT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_IMAGE_OUT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_IMAGE_OUT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_IMAGE_OUT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_IMAGE_OUT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_IMAGE_OUT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_IMAGE_OUT_CACHE_VALUE ))
idwt_IMAGE_OUT_m_axi_U(
    .AWVALID(m_axi_IMAGE_OUT_AWVALID),
    .AWREADY(m_axi_IMAGE_OUT_AWREADY),
    .AWADDR(m_axi_IMAGE_OUT_AWADDR),
    .AWID(m_axi_IMAGE_OUT_AWID),
    .AWLEN(m_axi_IMAGE_OUT_AWLEN),
    .AWSIZE(m_axi_IMAGE_OUT_AWSIZE),
    .AWBURST(m_axi_IMAGE_OUT_AWBURST),
    .AWLOCK(m_axi_IMAGE_OUT_AWLOCK),
    .AWCACHE(m_axi_IMAGE_OUT_AWCACHE),
    .AWPROT(m_axi_IMAGE_OUT_AWPROT),
    .AWQOS(m_axi_IMAGE_OUT_AWQOS),
    .AWREGION(m_axi_IMAGE_OUT_AWREGION),
    .AWUSER(m_axi_IMAGE_OUT_AWUSER),
    .WVALID(m_axi_IMAGE_OUT_WVALID),
    .WREADY(m_axi_IMAGE_OUT_WREADY),
    .WDATA(m_axi_IMAGE_OUT_WDATA),
    .WSTRB(m_axi_IMAGE_OUT_WSTRB),
    .WLAST(m_axi_IMAGE_OUT_WLAST),
    .WID(m_axi_IMAGE_OUT_WID),
    .WUSER(m_axi_IMAGE_OUT_WUSER),
    .ARVALID(m_axi_IMAGE_OUT_ARVALID),
    .ARREADY(m_axi_IMAGE_OUT_ARREADY),
    .ARADDR(m_axi_IMAGE_OUT_ARADDR),
    .ARID(m_axi_IMAGE_OUT_ARID),
    .ARLEN(m_axi_IMAGE_OUT_ARLEN),
    .ARSIZE(m_axi_IMAGE_OUT_ARSIZE),
    .ARBURST(m_axi_IMAGE_OUT_ARBURST),
    .ARLOCK(m_axi_IMAGE_OUT_ARLOCK),
    .ARCACHE(m_axi_IMAGE_OUT_ARCACHE),
    .ARPROT(m_axi_IMAGE_OUT_ARPROT),
    .ARQOS(m_axi_IMAGE_OUT_ARQOS),
    .ARREGION(m_axi_IMAGE_OUT_ARREGION),
    .ARUSER(m_axi_IMAGE_OUT_ARUSER),
    .RVALID(m_axi_IMAGE_OUT_RVALID),
    .RREADY(m_axi_IMAGE_OUT_RREADY),
    .RDATA(m_axi_IMAGE_OUT_RDATA),
    .RLAST(m_axi_IMAGE_OUT_RLAST),
    .RID(m_axi_IMAGE_OUT_RID),
    .RUSER(m_axi_IMAGE_OUT_RUSER),
    .RRESP(m_axi_IMAGE_OUT_RRESP),
    .BVALID(m_axi_IMAGE_OUT_BVALID),
    .BREADY(m_axi_IMAGE_OUT_BREADY),
    .BRESP(m_axi_IMAGE_OUT_BRESP),
    .BID(m_axi_IMAGE_OUT_BID),
    .BUSER(m_axi_IMAGE_OUT_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(IMAGE_OUT_ARREADY),
    .I_ARADDR(ap_const_lv32_0),
    .I_ARID(1'b0),
    .I_ARLEN(ap_const_lv32_0),
    .I_ARSIZE(ap_const_lv3_0),
    .I_ARLOCK(ap_const_lv2_0),
    .I_ARCACHE(ap_const_lv4_0),
    .I_ARQOS(ap_const_lv4_0),
    .I_ARPROT(ap_const_lv3_0),
    .I_ARUSER(1'b0),
    .I_ARBURST(ap_const_lv2_0),
    .I_ARREGION(ap_const_lv4_0),
    .I_RVALID(IMAGE_OUT_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(IMAGE_OUT_RDATA),
    .I_RID(IMAGE_OUT_RID),
    .I_RUSER(IMAGE_OUT_RUSER),
    .I_RRESP(IMAGE_OUT_RRESP),
    .I_RLAST(IMAGE_OUT_RLAST),
    .I_AWVALID(IMAGE_OUT_AWVALID),
    .I_AWREADY(IMAGE_OUT_AWREADY),
    .I_AWADDR(IMAGE_OUT_AWADDR),
    .I_AWID(1'b0),
    .I_AWLEN(ap_const_lv32_1),
    .I_AWSIZE(ap_const_lv3_0),
    .I_AWLOCK(ap_const_lv2_0),
    .I_AWCACHE(ap_const_lv4_0),
    .I_AWQOS(ap_const_lv4_0),
    .I_AWPROT(ap_const_lv3_0),
    .I_AWUSER(1'b0),
    .I_AWBURST(ap_const_lv2_0),
    .I_AWREGION(ap_const_lv4_0),
    .I_WVALID(IMAGE_OUT_WVALID),
    .I_WREADY(IMAGE_OUT_WREADY),
    .I_WDATA(IMAGE_OUT_WDATA),
    .I_WID(1'b0),
    .I_WUSER(1'b0),
    .I_WLAST(1'b0),
    .I_WSTRB(ap_const_lv4_F),
    .I_BVALID(IMAGE_OUT_BVALID),
    .I_BREADY(IMAGE_OUT_BREADY),
    .I_BRESP(IMAGE_OUT_BRESP),
    .I_BID(IMAGE_OUT_BID),
    .I_BUSER(IMAGE_OUT_BUSER)
);

idwt_image0 #(
    .DataWidth( 32 ),
    .AddressRange( 65536 ),
    .AddressWidth( 16 ))
image0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(image0_address0),
    .ce0(image0_ce0),
    .we0(image0_we0),
    .d0(IMAGE_IN0_addr_read_reg_1120),
    .q0(image0_q0)
);

idwt_image0 #(
    .DataWidth( 32 ),
    .AddressRange( 65536 ),
    .AddressWidth( 16 ))
image1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(image1_address0),
    .ce0(image1_ce0),
    .we0(image1_we0),
    .d0(IMAGE_IN1_addr_read_reg_1144),
    .q0(image1_q0)
);

idwt_image0 #(
    .DataWidth( 32 ),
    .AddressRange( 65536 ),
    .AddressWidth( 16 ))
image2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(image2_address0),
    .ce0(image2_ce0),
    .we0(image2_we0),
    .d0(IMAGE_IN2_addr_read_reg_1168),
    .q0(image2_q0)
);

idwt_image0 #(
    .DataWidth( 32 ),
    .AddressRange( 65536 ),
    .AddressWidth( 16 ))
image3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(image3_address0),
    .ce0(image3_ce0),
    .we0(image3_we0),
    .d0(IMAGE_IN3_addr_read_reg_1192),
    .q0(image3_q0)
);

idwt_fptrunc_64nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
idwt_fptrunc_64nsbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_469_p0),
    .ce(grp_fu_469_ce),
    .dout(grp_fu_469_p1)
);

idwt_fpext_32ns_6cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
idwt_fpext_32ns_6cud_U2(
    .din0(grp_fu_472_p0),
    .dout(grp_fu_472_p1)
);

idwt_dadddsub_64ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
idwt_dadddsub_64ndEe_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_475_p0),
    .din1(grp_fu_475_p1),
    .opcode(grp_fu_475_opcode),
    .ce(grp_fu_475_ce),
    .dout(grp_fu_475_p2)
);

idwt_dmul_64ns_64eOg #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
idwt_dmul_64ns_64eOg_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_479_p0),
    .din1(grp_fu_479_p1),
    .ce(grp_fu_479_ce),
    .dout(grp_fu_479_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0)) & ~(1'b0 == exitcond_fu_618_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == tmp_fu_594_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0)) & (1'b0 == exitcond_fu_618_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state9) & (1'b0 == tmp_fu_594_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0)) & ~(1'b0 == exitcond_fu_618_p2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == tmp_fu_594_p2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0)) & ~(1'b0 == exitcond1_fu_664_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0)) & (1'b0 == exitcond1_fu_664_p2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state13) | ((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0)) & ~(1'b0 == exitcond1_fu_664_p2)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0)) & ~(1'b0 == exitcond2_fu_710_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0)) & (1'b0 == exitcond2_fu_710_p2))) begin
            ap_enable_reg_pp2_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0)) & ~(1'b0 == exitcond2_fu_710_p2)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0)) & ~(1'b0 == exitcond3_fu_756_p2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0)) & (1'b0 == exitcond3_fu_756_p2))) begin
            ap_enable_reg_pp3_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_pp3_stage0) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0)) & ~(1'b0 == exitcond3_fu_756_p2)))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0))) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & ~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) & ~(1'b0 == exitcond_flatten_fu_802_p2))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state9) & ~(1'b0 == tmp_fu_594_p2))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage12) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))) & (1'b0 == exitcond_flatten_reg_1197))) begin
            ap_enable_reg_pp4_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state9) & ~(1'b0 == tmp_fu_594_p2)) | ((1'b1 == ap_CS_fsm_pp4_stage12) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))) & ~(1'b0 == exitcond_flatten_reg_1197)))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage12) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))))) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage12) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))))) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage12) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))))) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage12) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))))) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end else if (((1'b1 == ap_CS_fsm_state9) & ~(1'b0 == tmp_fu_594_p2))) begin
            ap_enable_reg_pp4_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_IMAGE_IN0_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            if ((ap_condition_926 == 1'b1)) begin
                ap_reg_ioackin_IMAGE_IN0_ARREADY <= 1'b0;
            end else if ((1'b1 == IMAGE_IN0_ARREADY)) begin
                ap_reg_ioackin_IMAGE_IN0_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_IMAGE_IN1_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            if ((ap_condition_926 == 1'b1)) begin
                ap_reg_ioackin_IMAGE_IN1_ARREADY <= 1'b0;
            end else if ((1'b1 == IMAGE_IN1_ARREADY)) begin
                ap_reg_ioackin_IMAGE_IN1_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_IMAGE_IN2_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            if ((ap_condition_926 == 1'b1)) begin
                ap_reg_ioackin_IMAGE_IN2_ARREADY <= 1'b0;
            end else if ((1'b1 == IMAGE_IN2_ARREADY)) begin
                ap_reg_ioackin_IMAGE_IN2_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_IMAGE_IN3_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            if ((ap_condition_926 == 1'b1)) begin
                ap_reg_ioackin_IMAGE_IN3_ARREADY <= 1'b0;
            end else if ((1'b1 == IMAGE_IN3_ARREADY)) begin
                ap_reg_ioackin_IMAGE_IN3_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_IMAGE_OUT_AWREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage6) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)))) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage11) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY))) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b1 == ap_CS_fsm_pp4_stage0) & ~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY))))) begin
            ap_reg_ioackin_IMAGE_OUT_AWREADY <= 1'b0;
        end else if ((((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage6) & ~((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) & (1'b1 == IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage11) & (1'b1 == IMAGE_OUT_AWREADY)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == IMAGE_OUT_AWREADY)))) begin
            ap_reg_ioackin_IMAGE_OUT_AWREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_IMAGE_OUT_WREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage2) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage7) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))))) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage12) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))))) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))))) begin
            ap_reg_ioackin_IMAGE_OUT_WREADY <= 1'b0;
        end else if ((((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == IMAGE_OUT_WREADY)) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == IMAGE_OUT_WREADY) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b1 == IMAGE_OUT_WREADY) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (1'b1 == IMAGE_OUT_WREADY)))) begin
            ap_reg_ioackin_IMAGE_OUT_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & ~(1'b0 == tmp_fu_594_p2))) begin
        cols_reg_458 <= ap_const_lv12_0;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1) & ~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) & (1'b0 == exitcond_flatten_reg_1197))) begin
        cols_reg_458 <= cols_1_reg_1275;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        indvar1_reg_403 <= ap_const_lv11_0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == exitcond1_fu_664_p2))) begin
        indvar1_reg_403 <= indvar_next1_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        indvar2_reg_414 <= ap_const_lv11_0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond2_fu_710_p2))) begin
        indvar2_reg_414 <= indvar_next2_fu_716_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        indvar3_reg_425 <= ap_const_lv11_0;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond3_fu_756_p2))) begin
        indvar3_reg_425 <= indvar_next3_fu_762_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & ~(1'b0 == tmp_fu_594_p2))) begin
        indvar_flatten_reg_436 <= ap_const_lv17_0;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1) & ~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) & (1'b0 == exitcond_flatten_reg_1197))) begin
        indvar_flatten_reg_436 <= indvar_flatten_next_reg_1201;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond_fu_618_p2))) begin
        indvar_reg_392 <= indvar_next_fu_624_p2;
    end else if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == tmp_fu_594_p2))) begin
        indvar_reg_392 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & ~(1'b0 == tmp_fu_594_p2))) begin
        rows1_reg_447 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1) & ~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) & (1'b0 == exitcond_flatten_reg_1197))) begin
        rows1_reg_447 <= tmp_5_mid2_v_v_reg_1212;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        rows_reg_381 <= rows_2_reg_1088;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        rows_reg_381 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_reg_1101 == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0)))) begin
        IMAGE_IN0_addr_read_reg_1120 <= IMAGE_IN0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == exitcond1_reg_1125) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0)))) begin
        IMAGE_IN1_addr_read_reg_1144 <= IMAGE_IN1_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond2_reg_1149) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0)))) begin
        IMAGE_IN2_addr_read_reg_1168 <= IMAGE_IN2_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond3_reg_1173) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0)))) begin
        IMAGE_IN3_addr_read_reg_1192 <= IMAGE_IN3_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0)))) begin
        ap_pipeline_reg_pp0_iter1_exitcond_reg_1101 <= exitcond_reg_1101;
        ap_pipeline_reg_pp0_iter1_tmp_37_reg_1110 <= tmp_37_reg_1110;
        ap_pipeline_reg_pp0_iter1_tmp_9_reg_1115 <= tmp_9_reg_1115;
        exitcond_reg_1101 <= exitcond_fu_618_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0)))) begin
        ap_pipeline_reg_pp1_iter1_exitcond1_reg_1125 <= exitcond1_reg_1125;
        ap_pipeline_reg_pp1_iter1_tmp_40_reg_1134 <= tmp_40_reg_1134;
        ap_pipeline_reg_pp1_iter1_tmp_41_reg_1139 <= tmp_41_reg_1139;
        exitcond1_reg_1125 <= exitcond1_fu_664_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0)))) begin
        ap_pipeline_reg_pp2_iter1_exitcond2_reg_1149 <= exitcond2_reg_1149;
        ap_pipeline_reg_pp2_iter1_tmp_44_reg_1158 <= tmp_44_reg_1158;
        ap_pipeline_reg_pp2_iter1_tmp_45_reg_1163 <= tmp_45_reg_1163;
        exitcond2_reg_1149 <= exitcond2_fu_710_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0)))) begin
        ap_pipeline_reg_pp3_iter1_exitcond3_reg_1173 <= exitcond3_reg_1173;
        ap_pipeline_reg_pp3_iter1_tmp_48_reg_1182 <= tmp_48_reg_1182;
        ap_pipeline_reg_pp3_iter1_tmp_49_reg_1187 <= tmp_49_reg_1187;
        exitcond3_reg_1173 <= exitcond3_fu_756_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & ~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)))) begin
        ap_pipeline_reg_pp4_iter1_cols_mid2_reg_1206 <= cols_mid2_reg_1206;
        ap_pipeline_reg_pp4_iter1_exitcond_flatten_reg_1197 <= exitcond_flatten_reg_1197;
        ap_pipeline_reg_pp4_iter1_idx2_reg_1232 <= idx2_reg_1232;
        ap_pipeline_reg_pp4_iter1_tmp_34_reg_1227 <= tmp_34_reg_1227;
        ap_pipeline_reg_pp4_iter2_cols_mid2_reg_1206 <= ap_pipeline_reg_pp4_iter1_cols_mid2_reg_1206;
        ap_pipeline_reg_pp4_iter2_exitcond_flatten_reg_1197 <= ap_pipeline_reg_pp4_iter1_exitcond_flatten_reg_1197;
        ap_pipeline_reg_pp4_iter2_idx2_reg_1232 <= ap_pipeline_reg_pp4_iter1_idx2_reg_1232;
        ap_pipeline_reg_pp4_iter2_tmp_34_reg_1227 <= ap_pipeline_reg_pp4_iter1_tmp_34_reg_1227;
        ap_pipeline_reg_pp4_iter3_cols_mid2_reg_1206 <= ap_pipeline_reg_pp4_iter2_cols_mid2_reg_1206;
        ap_pipeline_reg_pp4_iter3_exitcond_flatten_reg_1197 <= ap_pipeline_reg_pp4_iter2_exitcond_flatten_reg_1197;
        ap_pipeline_reg_pp4_iter3_idx2_reg_1232 <= ap_pipeline_reg_pp4_iter2_idx2_reg_1232;
        ap_pipeline_reg_pp4_iter3_tmp_34_reg_1227 <= ap_pipeline_reg_pp4_iter2_tmp_34_reg_1227;
        ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197 <= ap_pipeline_reg_pp4_iter3_exitcond_flatten_reg_1197;
        ap_pipeline_reg_pp4_iter4_idx2_reg_1232 <= ap_pipeline_reg_pp4_iter3_idx2_reg_1232;
        ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197 <= ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197;
        exitcond_flatten_reg_1197 <= exitcond_flatten_fu_802_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage1) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))))) begin
        ap_pipeline_reg_pp4_iter1_tmp_44_cast_reg_1238[17 : 0] <= tmp_44_cast_reg_1238[17 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage4) & ~((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)))) begin
        ap_pipeline_reg_pp4_iter2_pixelIn3_reg_1300 <= pixelIn3_reg_1300;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage12) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond_flatten_reg_1197))) begin
        cols_1_reg_1275 <= cols_1_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & ~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) & (1'b0 == exitcond_flatten_fu_802_p2))) begin
        cols_mid2_reg_1206 <= cols_mid2_fu_828_p3;
        idx2_reg_1232 <= idx2_fu_900_p2;
        tmp_12_reg_1222 <= {{cols_mid2_fu_828_p3[ap_const_lv32_B : ap_const_lv32_1]}};
        tmp_34_reg_1227 <= {{tmp_5_mid2_v_v_fu_836_p3[ap_const_lv32_6 : ap_const_lv32_1]}};
        tmp_5_mid2_v_reg_1217 <= {{tmp_5_mid2_v_v_fu_836_p3[ap_const_lv32_7 : ap_const_lv32_1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_pipeline_reg_pp4_iter3_exitcond_flatten_reg_1197) & ~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)))) begin
        idx1_reg_1365 <= idx1_fu_936_p3;
        imageOut10_sum_reg_1370 <= imageOut10_sum_fu_946_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        imageIn4_reg_1037 <= {{imageIn2[ap_const_lv32_1F : ap_const_lv32_2]}};
        imageIn5_reg_1042 <= {{imageIn1[ap_const_lv32_1F : ap_const_lv32_2]}};
        imageIn6_reg_1047 <= {{imageIn0[ap_const_lv32_1F : ap_const_lv32_2]}};
        imageIn_reg_1032 <= {{imageIn3[ap_const_lv32_1F : ap_const_lv32_2]}};
        tmp_2_reg_1027 <= {{imageOut[ap_const_lv32_1F : ap_const_lv32_2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        imageOut10_sum1_reg_1390 <= imageOut10_sum1_fu_970_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        imageOut10_sum2_reg_1405 <= imageOut10_sum2_fu_988_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage12) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))))) begin
        imageOut10_sum3_reg_1415 <= imageOut10_sum3_fu_1012_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & ~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        indvar_flatten_next_reg_1201 <= indvar_flatten_next_fu_808_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage2) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond_flatten_reg_1197))) begin
        pixelIn0_reg_1255 <= image0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        pixelIn1_reg_1260 <= image1_q0;
        tmp_14_reg_1265 <= grp_fu_472_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_exitcond_flatten_reg_1197) & ~((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)))) begin
        pixelIn2_reg_1295 <= image2_q0;
        pixelIn3_reg_1300 <= image3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        pixelOut2_reg_1385 <= grp_fu_469_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage6) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))))) begin
        pixelOut3_reg_1395 <= grp_fu_469_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))) & (1'b0 == ap_pipeline_reg_pp4_iter1_exitcond_flatten_reg_1197)) | ((1'b1 == ap_CS_fsm_pp4_stage12) & (1'b1 == ap_enable_reg_pp4_iter3) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))) & (1'b0 == ap_pipeline_reg_pp4_iter3_exitcond_flatten_reg_1197)))) begin
        reg_485 <= grp_fu_479_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage4) & ~((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))))) begin
        reg_491 <= grp_fu_469_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage4) & ~((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage2) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))))) begin
        reg_496 <= grp_fu_479_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rows_2_reg_1088 <= rows_2_fu_600_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1) & ~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) & (1'b0 == exitcond_flatten_reg_1197))) begin
        tmp_15_reg_1280 <= grp_fu_479_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage4) & ~((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond_flatten_reg_1197))) begin
        tmp_16_reg_1270 <= grp_fu_472_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        tmp_18_reg_1310 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        tmp_19_reg_1305 <= grp_fu_472_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == tmp_fu_594_p2))) begin
        tmp_1_reg_1093[15 : 10] <= tmp_1_fu_610_p3[15 : 10];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage6) & (1'b1 == ap_enable_reg_pp4_iter2) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) & (1'b0 == ap_pipeline_reg_pp4_iter2_exitcond_flatten_reg_1197))) begin
        tmp_20_reg_1320 <= grp_fu_475_p2;
        tmp_21_reg_1325 <= grp_fu_472_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter3) & (1'b0 == ap_pipeline_reg_pp4_iter3_exitcond_flatten_reg_1197) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))) begin
        tmp_22_reg_1345 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage7) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))) & (1'b1 == ap_enable_reg_pp4_iter2) & (1'b0 == ap_pipeline_reg_pp4_iter2_exitcond_flatten_reg_1197))) begin
        tmp_24_reg_1330 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter3) & (1'b0 == ap_pipeline_reg_pp4_iter3_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        tmp_25_reg_1350 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage11) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_exitcond_flatten_reg_1197) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)))) begin
        tmp_27_reg_1315 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter2) & (1'b0 == ap_pipeline_reg_pp4_iter2_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage8))) begin
        tmp_28_reg_1335 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter3) & (1'b0 == ap_pipeline_reg_pp4_iter3_exitcond_flatten_reg_1197) & ~((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)))) begin
        tmp_29_reg_1355 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_2_cast_reg_1076[29 : 0] <= tmp_2_cast_fu_591_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        tmp_30_reg_1380 <= grp_fu_479_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter2) & (1'b0 == ap_pipeline_reg_pp4_iter2_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage9))) begin
        tmp_31_reg_1340 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter3) & (1'b0 == ap_pipeline_reg_pp4_iter3_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        tmp_32_reg_1360 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0)) & (1'b0 == exitcond_fu_618_p2))) begin
        tmp_37_reg_1110 <= tmp_37_fu_634_p1;
        tmp_9_reg_1115 <= {{imageIn0_addr_fu_638_p2[ap_const_lv32_F : ap_const_lv32_A]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0)) & (1'b0 == exitcond1_fu_664_p2))) begin
        tmp_40_reg_1134 <= tmp_40_fu_680_p1;
        tmp_41_reg_1139 <= {{imageIn1_addr_fu_684_p2[ap_const_lv32_F : ap_const_lv32_A]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage1) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))) & (1'b0 == exitcond_flatten_reg_1197))) begin
        tmp_44_cast_reg_1238[17 : 0] <= tmp_44_cast_fu_926_p1[17 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0)) & (1'b0 == exitcond2_fu_710_p2))) begin
        tmp_44_reg_1158 <= tmp_44_fu_726_p1;
        tmp_45_reg_1163 <= {{imageIn2_addr_fu_730_p2[ap_const_lv32_F : ap_const_lv32_A]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0)) & (1'b0 == exitcond3_fu_756_p2))) begin
        tmp_48_reg_1182 <= tmp_48_fu_772_p1;
        tmp_49_reg_1187 <= {{imageIn3_addr_fu_776_p2[ap_const_lv32_F : ap_const_lv32_A]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & ~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond_flatten_fu_802_p2))) begin
        tmp_5_mid2_v_v_reg_1212 <= tmp_5_mid2_v_v_fu_836_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_reg_ioackin_IMAGE_IN0_ARREADY))) begin
        IMAGE_IN0_ARVALID = 1'b1;
    end else begin
        IMAGE_IN0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0)))) begin
        IMAGE_IN0_RREADY = 1'b1;
    end else begin
        IMAGE_IN0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IMAGE_IN0_blk_n_AR = m_axi_IMAGE_IN0_ARREADY;
    end else begin
        IMAGE_IN0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0))) begin
        IMAGE_IN0_blk_n_R = m_axi_IMAGE_IN0_RVALID;
    end else begin
        IMAGE_IN0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_reg_ioackin_IMAGE_IN1_ARREADY))) begin
        IMAGE_IN1_ARVALID = 1'b1;
    end else begin
        IMAGE_IN1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0)))) begin
        IMAGE_IN1_RREADY = 1'b1;
    end else begin
        IMAGE_IN1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IMAGE_IN1_blk_n_AR = m_axi_IMAGE_IN1_ARREADY;
    end else begin
        IMAGE_IN1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125))) begin
        IMAGE_IN1_blk_n_R = m_axi_IMAGE_IN1_RVALID;
    end else begin
        IMAGE_IN1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_reg_ioackin_IMAGE_IN2_ARREADY))) begin
        IMAGE_IN2_ARVALID = 1'b1;
    end else begin
        IMAGE_IN2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & ~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0)))) begin
        IMAGE_IN2_RREADY = 1'b1;
    end else begin
        IMAGE_IN2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IMAGE_IN2_blk_n_AR = m_axi_IMAGE_IN2_ARREADY;
    end else begin
        IMAGE_IN2_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149))) begin
        IMAGE_IN2_blk_n_R = m_axi_IMAGE_IN2_RVALID;
    end else begin
        IMAGE_IN2_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_reg_ioackin_IMAGE_IN3_ARREADY))) begin
        IMAGE_IN3_ARVALID = 1'b1;
    end else begin
        IMAGE_IN3_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0)))) begin
        IMAGE_IN3_RREADY = 1'b1;
    end else begin
        IMAGE_IN3_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IMAGE_IN3_blk_n_AR = m_axi_IMAGE_IN3_ARREADY;
    end else begin
        IMAGE_IN3_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173))) begin
        IMAGE_IN3_blk_n_R = m_axi_IMAGE_IN3_RVALID;
    end else begin
        IMAGE_IN3_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_reg_ioackin_IMAGE_OUT_AWREADY))) begin
        if (((1'b1 == ap_enable_reg_pp4_iter5) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            IMAGE_OUT_AWADDR = imageOut10_sum3_cast_fu_1017_p1;
        end else if (((1'b1 == ap_enable_reg_pp4_iter4) & (1'b1 == ap_CS_fsm_pp4_stage11))) begin
            IMAGE_OUT_AWADDR = imageOut10_sum2_cast_fu_993_p1;
        end else if ((ap_condition_1465 == 1'b1)) begin
            IMAGE_OUT_AWADDR = imageOut10_sum1_cast_fu_975_p1;
        end else if (((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter4))) begin
            IMAGE_OUT_AWADDR = imageOut10_sum_cast_fu_951_p1;
        end else begin
            IMAGE_OUT_AWADDR = 'bx;
        end
    end else begin
        IMAGE_OUT_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_reg_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage6) & ~((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) & (1'b0 == ap_reg_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage11) & (1'b0 == ap_reg_ioackin_IMAGE_OUT_AWREADY)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_reg_ioackin_IMAGE_OUT_AWREADY)))) begin
        IMAGE_OUT_AWVALID = 1'b1;
    end else begin
        IMAGE_OUT_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage7) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))))) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage12) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))))) | ((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & ~((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) | ((1'b1 == ap_CS_fsm_pp4_stage6) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)))))) begin
        IMAGE_OUT_BREADY = 1'b1;
    end else begin
        IMAGE_OUT_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (1'b0 == ap_reg_ioackin_IMAGE_OUT_WREADY))) begin
        IMAGE_OUT_WDATA = pixelOut3_reg_1395;
    end else if (((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_reg_ioackin_IMAGE_OUT_WREADY) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)))) begin
        IMAGE_OUT_WDATA = pixelOut2_reg_1385;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_reg_ioackin_IMAGE_OUT_WREADY)) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage7) & (1'b0 == ap_reg_ioackin_IMAGE_OUT_WREADY) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))))) begin
        IMAGE_OUT_WDATA = reg_491;
    end else begin
        IMAGE_OUT_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_reg_ioackin_IMAGE_OUT_WREADY)) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage7) & (1'b0 == ap_reg_ioackin_IMAGE_OUT_WREADY) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_reg_ioackin_IMAGE_OUT_WREADY) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (1'b0 == ap_reg_ioackin_IMAGE_OUT_WREADY)))) begin
        IMAGE_OUT_WVALID = 1'b1;
    end else begin
        IMAGE_OUT_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197)) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage6)) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage11)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        IMAGE_OUT_blk_n_AW = m_axi_IMAGE_OUT_AWREADY;
    end else begin
        IMAGE_OUT_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage7)) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage12)) | ((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197)) | ((1'b1 == ap_CS_fsm_pp4_stage6) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197)))) begin
        IMAGE_OUT_blk_n_B = m_axi_IMAGE_OUT_BVALID;
    end else begin
        IMAGE_OUT_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage7)) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage12)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197)))) begin
        IMAGE_OUT_blk_n_W = m_axi_IMAGE_OUT_WREADY;
    end else begin
        IMAGE_OUT_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_IMAGE_IN0_ARREADY)) begin
        ap_sig_ioackin_IMAGE_IN0_ARREADY = IMAGE_IN0_ARREADY;
    end else begin
        ap_sig_ioackin_IMAGE_IN0_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_IMAGE_IN1_ARREADY)) begin
        ap_sig_ioackin_IMAGE_IN1_ARREADY = IMAGE_IN1_ARREADY;
    end else begin
        ap_sig_ioackin_IMAGE_IN1_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_IMAGE_IN2_ARREADY)) begin
        ap_sig_ioackin_IMAGE_IN2_ARREADY = IMAGE_IN2_ARREADY;
    end else begin
        ap_sig_ioackin_IMAGE_IN2_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_IMAGE_IN3_ARREADY)) begin
        ap_sig_ioackin_IMAGE_IN3_ARREADY = IMAGE_IN3_ARREADY;
    end else begin
        ap_sig_ioackin_IMAGE_IN3_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_IMAGE_OUT_AWREADY)) begin
        ap_sig_ioackin_IMAGE_OUT_AWREADY = IMAGE_OUT_AWREADY;
    end else begin
        ap_sig_ioackin_IMAGE_OUT_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_IMAGE_OUT_WREADY)) begin
        ap_sig_ioackin_IMAGE_OUT_WREADY = IMAGE_OUT_WREADY;
    end else begin
        ap_sig_ioackin_IMAGE_OUT_WREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == exitcond_flatten_reg_1197))) begin
        cols_phi_fu_462_p4 = cols_1_reg_1275;
    end else begin
        cols_phi_fu_462_p4 = cols_reg_458;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & ~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY))) | ((1'b1 == ap_CS_fsm_pp4_stage1) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))) | (1'b1 == ap_CS_fsm_pp4_stage3) | ((1'b1 == ap_CS_fsm_pp4_stage4) & ~((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) | (1'b1 == ap_CS_fsm_pp4_stage5) | ((1'b1 == ap_CS_fsm_pp4_stage6) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)))))) begin
        grp_fu_469_ce = 1'b1;
    end else begin
        grp_fu_469_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter4) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        grp_fu_469_p0 = tmp_30_reg_1380;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter4) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b1 == ap_CS_fsm_pp4_stage5)))) begin
        grp_fu_469_p0 = reg_496;
    end else if (((1'b1 == ap_enable_reg_pp4_iter4) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        grp_fu_469_p0 = reg_485;
    end else begin
        grp_fu_469_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage6) & (1'b1 == ap_enable_reg_pp4_iter2))) begin
        grp_fu_472_p0 = ap_pipeline_reg_pp4_iter2_pixelIn3_reg_1300;
    end else if (((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        grp_fu_472_p0 = pixelIn2_reg_1295;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        grp_fu_472_p0 = pixelIn1_reg_1260;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        grp_fu_472_p0 = pixelIn0_reg_1255;
    end else begin
        grp_fu_472_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & ~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY))) | ((1'b1 == ap_CS_fsm_pp4_stage1) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))) | ((1'b1 == ap_CS_fsm_pp4_stage2) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))) | (1'b1 == ap_CS_fsm_pp4_stage3) | ((1'b1 == ap_CS_fsm_pp4_stage4) & ~((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) | (1'b1 == ap_CS_fsm_pp4_stage5) | (1'b1 == ap_CS_fsm_pp4_stage10) | (1'b1 == ap_CS_fsm_pp4_stage8) | (1'b1 == ap_CS_fsm_pp4_stage9) | ((1'b1 == ap_CS_fsm_pp4_stage6) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)))) | ((1'b1 == ap_CS_fsm_pp4_stage11) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY))) | ((1'b1 == ap_CS_fsm_pp4_stage12) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))))) | ((1'b1 == ap_CS_fsm_pp4_stage7) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))))))) begin
        grp_fu_475_ce = 1'b1;
    end else begin
        grp_fu_475_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter2) & (1'b0 == ap_pipeline_reg_pp4_iter2_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage8)) | ((1'b1 == ap_enable_reg_pp4_iter2) & (1'b0 == ap_pipeline_reg_pp4_iter2_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage9)) | ((1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_exitcond_flatten_reg_1197) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_CS_fsm_pp4_stage12) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_exitcond_flatten_reg_1197) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter2) & (1'b0 == ap_pipeline_reg_pp4_iter2_exitcond_flatten_reg_1197)))) begin
        grp_fu_475_opcode = ap_const_lv2_1;
    end else if ((((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_exitcond_flatten_reg_1197)) | ((1'b1 == ap_CS_fsm_pp4_stage11) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_exitcond_flatten_reg_1197)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_pipeline_reg_pp4_iter1_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter2)) | ((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter2) & (1'b0 == ap_pipeline_reg_pp4_iter2_exitcond_flatten_reg_1197) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) | ((1'b1 == ap_CS_fsm_pp4_stage10) & (1'b1 == ap_enable_reg_pp4_iter2) & (1'b0 == ap_pipeline_reg_pp4_iter2_exitcond_flatten_reg_1197)))) begin
        grp_fu_475_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_475_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage10) & (1'b1 == ap_enable_reg_pp4_iter2))) begin
        grp_fu_475_p0 = tmp_31_reg_1340;
    end else if (((1'b1 == ap_enable_reg_pp4_iter2) & (1'b1 == ap_CS_fsm_pp4_stage9))) begin
        grp_fu_475_p0 = tmp_28_reg_1335;
    end else if (((1'b1 == ap_enable_reg_pp4_iter2) & (1'b1 == ap_CS_fsm_pp4_stage8))) begin
        grp_fu_475_p0 = tmp_24_reg_1330;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter2))) begin
        grp_fu_475_p0 = tmp_20_reg_1320;
    end else if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter2)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter2)))) begin
        grp_fu_475_p0 = tmp_27_reg_1315;
    end else if ((((1'b1 == ap_CS_fsm_pp4_stage11) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_CS_fsm_pp4_stage12) & (1'b1 == ap_enable_reg_pp4_iter1)))) begin
        grp_fu_475_p0 = tmp_18_reg_1310;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter1)))) begin
        grp_fu_475_p0 = tmp_15_reg_1280;
    end else begin
        grp_fu_475_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter2)) | ((1'b1 == ap_enable_reg_pp4_iter2) & (1'b1 == ap_CS_fsm_pp4_stage8)) | ((1'b1 == ap_enable_reg_pp4_iter2) & (1'b1 == ap_CS_fsm_pp4_stage9)) | ((1'b1 == ap_CS_fsm_pp4_stage10) & (1'b1 == ap_enable_reg_pp4_iter2)))) begin
        grp_fu_475_p1 = tmp_21_reg_1325;
    end else if ((((1'b1 == ap_CS_fsm_pp4_stage11) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_CS_fsm_pp4_stage12) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter2)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter2)))) begin
        grp_fu_475_p1 = tmp_19_reg_1305;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter1)))) begin
        grp_fu_475_p1 = reg_485;
    end else begin
        grp_fu_475_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & ~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY))) | ((1'b1 == ap_CS_fsm_pp4_stage1) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))) | ((1'b1 == ap_CS_fsm_pp4_stage2) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))) | (1'b1 == ap_CS_fsm_pp4_stage3) | ((1'b1 == ap_CS_fsm_pp4_stage4) & ~((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) | (1'b1 == ap_CS_fsm_pp4_stage5) | (1'b1 == ap_CS_fsm_pp4_stage10) | (1'b1 == ap_CS_fsm_pp4_stage8) | (1'b1 == ap_CS_fsm_pp4_stage9) | ((1'b1 == ap_CS_fsm_pp4_stage6) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)))) | ((1'b1 == ap_CS_fsm_pp4_stage11) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY))) | ((1'b1 == ap_CS_fsm_pp4_stage12) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))))) | ((1'b1 == ap_CS_fsm_pp4_stage7) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))))))) begin
        grp_fu_479_ce = 1'b1;
    end else begin
        grp_fu_479_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter3) & (1'b1 == ap_CS_fsm_pp4_stage8))) begin
        grp_fu_479_p0 = tmp_32_reg_1360;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter3))) begin
        grp_fu_479_p0 = tmp_29_reg_1355;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage6) & (1'b1 == ap_enable_reg_pp4_iter3))) begin
        grp_fu_479_p0 = tmp_25_reg_1350;
    end else if (((1'b1 == ap_enable_reg_pp4_iter3) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        grp_fu_479_p0 = tmp_22_reg_1345;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        grp_fu_479_p0 = tmp_16_reg_1270;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        grp_fu_479_p0 = tmp_14_reg_1265;
    end else begin
        grp_fu_479_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter3) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_CS_fsm_pp4_stage6) & (1'b1 == ap_enable_reg_pp4_iter3)) | ((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter3)) | ((1'b1 == ap_enable_reg_pp4_iter3) & (1'b1 == ap_CS_fsm_pp4_stage8)))) begin
        grp_fu_479_p1 = ap_const_lv64_3FE0000000000000;
    end else if ((((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5)))) begin
        grp_fu_479_p1 = ap_const_lv64_4000000000000000;
    end else begin
        grp_fu_479_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        image0_address0 = tmp_44_cast_fu_926_p1;
    end else if ((1'b1 == ap_enable_reg_pp0_iter2)) begin
        image0_address0 = tmp_39_fu_659_p1;
    end else begin
        image0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))) & (1'b1 == ap_enable_reg_pp4_iter0)))) begin
        image0_ce0 = 1'b1;
    end else begin
        image0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_reg_1101))) begin
        image0_we0 = 1'b1;
    end else begin
        image0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        image1_address0 = tmp_44_cast_reg_1238;
    end else if ((1'b1 == ap_enable_reg_pp1_iter2)) begin
        image1_address0 = tmp_43_fu_705_p1;
    end else begin
        image1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage2) & ~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)) & (1'b1 == ap_enable_reg_pp4_iter0)) | (~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        image1_ce0 = 1'b1;
    end else begin
        image1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_pipeline_reg_pp1_iter1_exitcond1_reg_1125))) begin
        image1_we0 = 1'b1;
    end else begin
        image1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        image2_address0 = ap_pipeline_reg_pp4_iter1_tmp_44_cast_reg_1238;
    end else if ((1'b1 == ap_enable_reg_pp2_iter2)) begin
        image2_address0 = tmp_47_fu_751_p1;
    end else begin
        image2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | (~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp2_iter2)))) begin
        image2_ce0 = 1'b1;
    end else begin
        image2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond2_reg_1149))) begin
        image2_we0 = 1'b1;
    end else begin
        image2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        image3_address0 = ap_pipeline_reg_pp4_iter1_tmp_44_cast_reg_1238;
    end else if ((1'b1 == ap_enable_reg_pp3_iter2)) begin
        image3_address0 = tmp_51_fu_797_p1;
    end else begin
        image3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | (~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp3_iter2)))) begin
        image3_ce0 = 1'b1;
    end else begin
        image3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_pipeline_reg_pp3_iter1_exitcond3_reg_1173))) begin
        image3_we0 = 1'b1;
    end else begin
        image3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == exitcond_flatten_reg_1197))) begin
        indvar_flatten_phi_fu_440_p4 = indvar_flatten_next_reg_1201;
    end else begin
        indvar_flatten_phi_fu_440_p4 = indvar_flatten_reg_436;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == exitcond_flatten_reg_1197))) begin
        rows1_phi_fu_451_p4 = tmp_5_mid2_v_v_reg_1212;
    end else begin
        rows1_phi_fu_451_p4 = rows1_reg_447;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (~((1'b0 == ap_sig_ioackin_IMAGE_IN0_ARREADY) | (1'b0 == ap_sig_ioackin_IMAGE_IN1_ARREADY) | (1'b0 == ap_sig_ioackin_IMAGE_IN2_ARREADY) | (1'b0 == ap_sig_ioackin_IMAGE_IN3_ARREADY))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (~(1'b0 == tmp_fu_594_p2)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~(~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(1'b1 == ap_enable_reg_pp0_iter1)) & ~(~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_fu_618_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(1'b1 == ap_enable_reg_pp0_iter1)) | (~((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_1101 == 1'b0) & (IMAGE_IN0_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_fu_618_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~(~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter2) & ~(1'b1 == ap_enable_reg_pp1_iter1)) & ~(~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond1_fu_664_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter2) & ~(1'b1 == ap_enable_reg_pp1_iter1)) | (~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond1_reg_1125) & (IMAGE_IN1_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond1_fu_664_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~(~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp2_iter2) & ~(1'b1 == ap_enable_reg_pp2_iter1)) & ~(~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp2_iter0) & ~(1'b0 == exitcond2_fu_710_p2) & ~(1'b1 == ap_enable_reg_pp2_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp2_iter2) & ~(1'b1 == ap_enable_reg_pp2_iter1)) | (~((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond2_reg_1149) & (IMAGE_IN2_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp2_iter0) & ~(1'b0 == exitcond2_fu_710_p2) & ~(1'b1 == ap_enable_reg_pp2_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~(~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b1 == ap_enable_reg_pp3_iter1)) & ~(~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b0 == exitcond3_fu_756_p2) & ~(1'b1 == ap_enable_reg_pp3_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp3_iter2) & ~(1'b1 == ap_enable_reg_pp3_iter1)) | (~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond3_reg_1173) & (IMAGE_IN3_RVALID == 1'b0)) & (1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b0 == exitcond3_fu_756_p2) & ~(1'b1 == ap_enable_reg_pp3_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) & ~(~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) & (1'b1 == ap_enable_reg_pp4_iter0) & ~(1'b0 == exitcond_flatten_fu_802_p2) & ~(1'b1 == ap_enable_reg_pp4_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if ((~((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) & (1'b1 == ap_enable_reg_pp4_iter0) & ~(1'b0 == exitcond_flatten_fu_802_p2) & ~(1'b1 == ap_enable_reg_pp4_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if (~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_pp4_stage2 : begin
            if (~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end
        end
        ap_ST_fsm_pp4_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage4;
        end
        ap_ST_fsm_pp4_stage4 : begin
            if (~((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end
        end
        ap_ST_fsm_pp4_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage6;
        end
        ap_ST_fsm_pp4_stage6 : begin
            if ((~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) & ~((1'b1 == ap_CS_fsm_pp4_stage6) & (1'b1 == ap_enable_reg_pp4_iter5) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) & ~(1'b1 == ap_enable_reg_pp4_iter4)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end else if (((1'b1 == ap_CS_fsm_pp4_stage6) & (1'b1 == ap_enable_reg_pp4_iter5) & ~(((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY)) | ((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0))) & ~(1'b1 == ap_enable_reg_pp4_iter4))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end
        end
        ap_ST_fsm_pp4_stage7 : begin
            if (~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end
        end
        ap_ST_fsm_pp4_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage9;
        end
        ap_ST_fsm_pp4_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage10;
        end
        ap_ST_fsm_pp4_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage11;
        end
        ap_ST_fsm_pp4_stage11 : begin
            if (~((1'b1 == ap_enable_reg_pp4_iter4) & (1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_AWREADY))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage11;
            end
        end
        ap_ST_fsm_pp4_stage12 : begin
            if (~((1'b1 == ap_enable_reg_pp4_iter4) & (((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp4_iter4_exitcond_flatten_reg_1197) & (1'b0 == ap_sig_ioackin_IMAGE_OUT_WREADY))))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage12;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign IMAGE_IN0_ARADDR = tmp_6_fu_581_p1;

assign IMAGE_IN1_ARADDR = tmp_5_fu_571_p1;

assign IMAGE_IN2_ARADDR = tmp_4_fu_561_p1;

assign IMAGE_IN3_ARADDR = tmp_3_fu_551_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_pp4_stage10 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_pp4_stage11 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_pp4_stage12 = ap_CS_fsm[ap_const_lv32_1D];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_pp4_stage4 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_pp4_stage5 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_pp4_stage6 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_pp4_stage7 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_pp4_stage8 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_pp4_stage9 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state21 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state25 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state98 = ap_CS_fsm[ap_const_lv32_1E];

always @ (*) begin
    ap_condition_1465 = ((1'b1 == ap_enable_reg_pp4_iter4) & (1'b1 == ap_CS_fsm_pp4_stage6) & ~((1'b1 == ap_enable_reg_pp4_iter5) & (1'b0 == ap_pipeline_reg_pp4_iter5_exitcond_flatten_reg_1197) & (IMAGE_OUT_BVALID == 1'b0)));
end

always @ (*) begin
    ap_condition_926 = ~((1'b0 == ap_sig_ioackin_IMAGE_IN0_ARREADY) | (1'b0 == ap_sig_ioackin_IMAGE_IN1_ARREADY) | (1'b0 == ap_sig_ioackin_IMAGE_IN2_ARREADY) | (1'b0 == ap_sig_ioackin_IMAGE_IN3_ARREADY));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cols_1_fu_931_p2 = (ap_const_lv12_2 + cols_mid2_reg_1206);

assign cols_cast1_fu_876_p1 = cols_mid2_fu_828_p3;

assign cols_mid2_fu_828_p3 = ((tmp_8_fu_820_p3[0:0] === 1'b1) ? ap_const_lv12_0 : cols_phi_fu_462_p4);

assign exitcond1_fu_664_p2 = ((indvar1_reg_403 == ap_const_lv11_400) ? 1'b1 : 1'b0);

assign exitcond2_fu_710_p2 = ((indvar2_reg_414 == ap_const_lv11_400) ? 1'b1 : 1'b0);

assign exitcond3_fu_756_p2 = ((indvar3_reg_425 == ap_const_lv11_400) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_802_p2 = ((indvar_flatten_phi_fu_440_p4 == ap_const_lv17_10000) ? 1'b1 : 1'b0);

assign exitcond_fu_618_p2 = ((indvar_reg_392 == ap_const_lv11_400) ? 1'b1 : 1'b0);

assign idx1_fu_936_p3 = {{ap_pipeline_reg_pp4_iter3_tmp_34_reg_1227}, {ap_pipeline_reg_pp4_iter3_cols_mid2_reg_1206}};

assign idx2_fu_900_p2 = (cols_cast1_fu_876_p1 + tmp_7_cast_mid2_fu_872_p1);

assign imageIn0_addr_fu_638_p2 = (indvar_cast9_fu_630_p1 + tmp_1_reg_1093);

assign imageIn1_addr_fu_684_p2 = (indvar1_cast7_fu_676_p1 + tmp_1_reg_1093);

assign imageIn2_addr_fu_730_p2 = (indvar2_cast5_fu_722_p1 + tmp_1_reg_1093);

assign imageIn3_addr_fu_776_p2 = (indvar3_cast3_fu_768_p1 + tmp_1_reg_1093);

assign imageOut10_sum1_cast_fu_975_p1 = imageOut10_sum1_reg_1390;

assign imageOut10_sum1_fu_970_p2 = (tmp_2_cast_reg_1076 + tmp_37_cast_fu_966_p1);

assign imageOut10_sum2_cast_fu_993_p1 = imageOut10_sum2_reg_1405;

assign imageOut10_sum2_fu_988_p2 = (tmp_2_cast_reg_1076 + tmp_38_cast_fu_985_p1);

assign imageOut10_sum3_cast_fu_1017_p1 = imageOut10_sum3_reg_1415;

assign imageOut10_sum3_fu_1012_p2 = (tmp_2_cast_reg_1076 + tmp_40_cast_fu_1008_p1);

assign imageOut10_sum_cast_fu_951_p1 = imageOut10_sum_reg_1370;

assign imageOut10_sum_fu_946_p2 = (tmp_2_cast_reg_1076 + tmp_35_cast_fu_942_p1);

assign indvar1_cast7_fu_676_p1 = indvar1_reg_403;

assign indvar2_cast5_fu_722_p1 = indvar2_reg_414;

assign indvar3_cast3_fu_768_p1 = indvar3_reg_425;

assign indvar_cast9_fu_630_p1 = indvar_reg_392;

assign indvar_flatten_next_fu_808_p2 = (indvar_flatten_phi_fu_440_p4 + ap_const_lv17_1);

assign indvar_next1_fu_670_p2 = (indvar1_reg_403 + ap_const_lv11_1);

assign indvar_next2_fu_716_p2 = (indvar2_reg_414 + ap_const_lv11_1);

assign indvar_next3_fu_762_p2 = (indvar3_reg_425 + ap_const_lv11_1);

assign indvar_next_fu_624_p2 = (indvar_reg_392 + ap_const_lv11_1);

assign rows_1_fu_814_p2 = (ap_const_lv8_2 + rows1_phi_fu_451_p4);

assign rows_2_fu_600_p2 = (rows_reg_381 + ap_const_lv7_1);

assign tmp_10_fu_854_p1 = tmp_5_mid2_v_v_fu_836_p3[6:0];

assign tmp_11_cast_fu_913_p1 = tmp_s_fu_906_p3;

assign tmp_13_fu_920_p2 = (tmp_11_cast_fu_913_p1 + tmp_14_cast_fu_917_p1);

assign tmp_14_cast_fu_917_p1 = tmp_12_reg_1222;

assign tmp_1_fu_610_p3 = {{tmp_7_fu_606_p1}, {ap_const_lv10_0}};

assign tmp_2_cast_fu_591_p1 = tmp_2_reg_1027;

assign tmp_35_cast_fu_942_p1 = idx1_fu_936_p3;

assign tmp_35_fu_961_p2 = (idx1_reg_1365 | ap_const_lv18_1);

assign tmp_36_fu_1003_p2 = (ap_pipeline_reg_pp4_iter4_idx2_reg_1232 | ap_const_lv19_1);

assign tmp_37_cast_fu_966_p1 = tmp_35_fu_961_p2;

assign tmp_37_fu_634_p1 = indvar_reg_392[9:0];

assign tmp_38_cast_fu_985_p1 = ap_pipeline_reg_pp4_iter4_idx2_reg_1232;

assign tmp_38_fu_653_p3 = {{ap_pipeline_reg_pp0_iter1_tmp_9_reg_1115}, {ap_pipeline_reg_pp0_iter1_tmp_37_reg_1110}};

assign tmp_39_fu_659_p1 = tmp_38_fu_653_p3;

assign tmp_3_fu_551_p1 = imageIn_reg_1032;

assign tmp_40_cast_fu_1008_p1 = tmp_36_fu_1003_p2;

assign tmp_40_fu_680_p1 = indvar1_reg_403[9:0];

assign tmp_42_fu_699_p3 = {{ap_pipeline_reg_pp1_iter1_tmp_41_reg_1139}, {ap_pipeline_reg_pp1_iter1_tmp_40_reg_1134}};

assign tmp_43_fu_705_p1 = tmp_42_fu_699_p3;

assign tmp_44_cast_fu_926_p1 = tmp_13_fu_920_p2;

assign tmp_44_fu_726_p1 = indvar2_reg_414[9:0];

assign tmp_46_fu_745_p3 = {{ap_pipeline_reg_pp2_iter1_tmp_45_reg_1163}, {ap_pipeline_reg_pp2_iter1_tmp_44_reg_1158}};

assign tmp_47_fu_751_p1 = tmp_46_fu_745_p3;

assign tmp_48_fu_772_p1 = indvar3_reg_425[9:0];

assign tmp_4_fu_561_p1 = imageIn4_reg_1037;

assign tmp_50_fu_791_p3 = {{ap_pipeline_reg_pp3_iter1_tmp_49_reg_1187}, {ap_pipeline_reg_pp3_iter1_tmp_48_reg_1182}};

assign tmp_51_fu_797_p1 = tmp_50_fu_791_p3;

assign tmp_5_fu_571_p1 = imageIn5_reg_1042;

assign tmp_5_mid2_v_v_fu_836_p3 = ((tmp_8_fu_820_p3[0:0] === 1'b1) ? rows_1_fu_814_p2 : rows1_phi_fu_451_p4);

assign tmp_6_fu_581_p1 = imageIn6_reg_1047;

assign tmp_7_cast_mid2_fu_872_p1 = tmp_7_cast_mid2_v_fu_866_p2;

assign tmp_7_cast_mid2_v_fu_866_p2 = (tmp_7_cast_mid2_v_v_fu_858_p3 | ap_const_lv18_800);

assign tmp_7_cast_mid2_v_v_fu_858_p3 = {{tmp_10_fu_854_p1}, {ap_const_lv11_0}};

assign tmp_7_fu_606_p1 = rows_reg_381[5:0];

assign tmp_8_fu_820_p3 = cols_phi_fu_462_p4[ap_const_lv32_B];

assign tmp_fu_594_p2 = ((rows_reg_381 == ap_const_lv7_40) ? 1'b1 : 1'b0);

assign tmp_s_fu_906_p3 = {{tmp_5_mid2_v_reg_1217}, {ap_const_lv10_0}};

always @ (posedge ap_clk) begin
    tmp_2_cast_reg_1076[30] <= 1'b0;
    tmp_1_reg_1093[9:0] <= 10'b0000000000;
    tmp_44_cast_reg_1238[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    ap_pipeline_reg_pp4_iter1_tmp_44_cast_reg_1238[63:18] <= 46'b0000000000000000000000000000000000000000000000;
end

endmodule //idwt
